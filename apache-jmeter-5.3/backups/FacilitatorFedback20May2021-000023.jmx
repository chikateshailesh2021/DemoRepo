<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.example.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">www.example.com</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LauncApplication" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bsg/login-2" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="UserName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">UserName</stringProp>
                    <stringProp name="Argument.value">test1@test.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">Password</stringProp>
                    <stringProp name="Argument.value">bsg@1234</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="RememberMe" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">RememberMe</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">X-Requested-With</stringProp>
                    <stringProp name="Argument.value">XMLHttpRequest</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bsg/login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bsg/dashboard-3" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bsg/dashboard</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bsg/path-5" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bsg/path</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/bsg/dashboard</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Common/GetFeedbackCount-7" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="appId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">appId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="widgetId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">widgetId</stringProp>
                    <stringProp name="Argument.value">782</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="itemId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">itemId</stringProp>
                    <stringProp name="Argument.value">1081</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="itemInstanceId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">itemInstanceId</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                    <stringProp name="Argument.value">131926</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="widgetTypeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">widgetTypeId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="divId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">divId</stringProp>
                    <stringProp name="Argument.value">feedbackPartialView</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isFeedbackCommon" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isFeedbackCommon</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Common/GetFeedbackCount</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/bsg/dashboard</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bsg/dashboard-6" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/bsg/dashboard</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/bsg/dashboard</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Range" elementType="Header">
                    <stringProp name="Header.name">Range</stringProp>
                    <stringProp name="Header.value">bytes=0-</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">video/webm,video/ogg,video/*;q=0.9,application/ogg;q=0.7,audio/*;q=0.6,*/*;q=0.5</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="UnconsiousBias" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/coursecommunity/unconscious-bias-49" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/coursecommunity/unconscious-bias</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/bsg/dashboard</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/coursecommunity/path-56" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/coursecommunity/path</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/coursecommunity/unconscious-bias</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Common/GetFeedbackCount-57" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="appId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">appId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="widgetId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">widgetId</stringProp>
                    <stringProp name="Argument.value">782</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="itemId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">itemId</stringProp>
                    <stringProp name="Argument.value">1081</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="itemInstanceId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">itemInstanceId</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                    <stringProp name="Argument.value">131926</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="widgetTypeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">widgetTypeId</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="divId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">divId</stringProp>
                    <stringProp name="Argument.value">feedbackPartialView</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="isFeedbackCommon" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isFeedbackCommon</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Common/GetFeedbackCount</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/coursecommunity/unconscious-bias</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="FacilitatorFeedback" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recording-data:publish-92" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recording-data:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recording-data:publish-94" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;eyJrIjoiOTAiLCJpIjoiMjkzODUyLTE2MjE1MjUwNzQwNjctMTlmMGVlNzUwMmI1ZTZiZSIsInIiOiIyOTM4NTItMTYyMTUyNTAwNTI2Mi0yOWE4OWM5YzM2MGY3ODM2IiwidCI6InIiLCJkIjp7Im1vdmVzIjp7ImMiOiJMWlVURjgiLCJkIjoiVzNzaWRDSTZJbTBpTENKdklqbzBNeXdpZHlJNk16a3hMQ0ptSWpwN0luRWlPaUlqUm1GamFXeHBkR0YwYjNKelFtOTRWM0poY0hCbGNpSjlMQ0pqeENSNElqb3hNRFV3TENKNUlqb3pOalFzSW5KNElqb3lNaTR6TXpNek56UXdNak0wTXpjMUxDSnllU0k2TWpFNWZYMHN6bk0yeFhNME5NeHlabVZsWkdKaFkydFFZWEowYVdGc1ZtbGxkMFpwY25OMDV3Q0tiM0lnTHNnakxYZm1BSS9MRW1GamRHbHZidTRBb0RmbkFLQXpPZVlBb0RUMkFLRHhBSjQ0NVFDZU1URHNBSjh1WnVzQkVTNXpiR2xqYXkxemJHbGtaY2NNWTNWeWNtVnVkTWNPNUFDT2RtWHZBSTR5NXdDT3hIamtBSTQwOUFDT01UUXdmWDFkIn0sIm90aGVycyI6eyJjIjoiTFpVVEY4IiwiZCI6Ilczc2lkQ0k2SW1RaUxDSnZJam8wTWl3aWR5STZNamNzSW1FaU9uc2lZeUk2VzEzRkRGdDdJbWtpT2lJeE9ETXdOU0xISG5OMGVXeGx4RDFwYzNCc1lYazZJRzV2Ym1VN0luMTlMTWt0TVRIZkxjMHROOTh0eXkwME5EVGZMY3d0TlREZkxjMHROdDh0ekMwMy93RGh6aTMvQU9ITkxUZ3ozeTNMTFRZeC93RGh6aTMvQU9ITkxUSXkzeTNNTFRQL0FPSE5MVFQvQU9IT0xUbmZMY3N0TnpmL0FPSE5MVGovQU9IT0xUamZMY3N0T0REL0FPSE9MZjhBNGMwdE1mOERoTXd0T1RUL0FPSE9MZjhBNGMwdE5mOERoTTB0TnY4QTRjMHROLzhBNGMwdE9QOERoTXN0T1RFdy93RGh6UzB4L3dEaHpTMHkvd09FelMwei93RGh6UzAwL3dEaHppMy9BNFRNTFRJMy93RGh6UzA0L3dEaHppMy9BNFRNTFRNdy93RGh6aTMvQU9ITkxUSC9BNFRNTFRRMC93RGh6aTMvQU9ITkxUWC9BNFROTFRiL0FPSE5MVGYvQU9IT0xmOERoTXd0TmpEL0FPSE5MVEgvQU9IT0xmOERoTTB0TS84QTRjNHQvd0RoelMwMC93T0V6QzAzTi84QTRjNHQvd0RoelMwNC93T0V6UzA1L3dEaHpDMDQvd21yemkzL0Nhdk5MVGt6L3dEaHpTMy9DYXZPTGY4SnE4NHROdjhBNGMwdC93bXJ6eTMvQTRUS0xUSXdNVEQvQU9ITkxmOEpxODh0L3dPRXpTMHovd0RoemkzL0FPSE5MZjhKcTgwdE1qZi9BT0hPTGY4QTRjMHQvd21yemkwNS93RGh6QzB6L3dtcnp5My9BNFRNTFRRei93RGh6UzMvQ2F2UExmOERoTTB0TnY4QTRjNHQvd0RoelMzL0Nhdk5MVGovQlViT0xmOEZHYzR0L3dVWnpTMDUvd1VaemkzL0JSbkVMVjBzNUE5R1cxM0ZOK3dQVURUbEQxQXp4MER4RDA4MS93cU82d0NKTmZzRXYySnNiMk5yeXl3Mi93b0V5eXMzK3dTUDBGYzMvd25VeXlzNCt3MncwRmM1TXY4Qmpzc3IrdzJBMEZjeE1EYi9Ba0RMTERFeStnRXkwRmt5T1A4RFRjd3NPVEw2QVRUUVdUTXdNdjhDYTh3cyt3TWUwVmsxTnY4QnVzc3NOakwvQWJ2TUxUai9ESnZNTERuN0J5ZlJXVG4vRVAvTExEUXcrd3VMMEZrME1mOENiczBzL3dKdnpWa3kvd1NDekN3ek52b0ZDTkZaTlA4SHE4d3NOVEQvQTgvTkxmOEZ1OHdzTnZzSjh0RlpOLzhOZHMwcyt3Z0MwVms0TmY4Q2I4c3NPVGovQVpES0xEWDhBLy9RTERML0NuWE1MRFQvQ0ZqTUxEWC9BMHZNTERiL0Rjbk1MRGovRlZmTUxEazEvd0RjeWl3Mk1Ebi9BTnpMTERML0Nwdk1MRFAvQ0g3TUxEWC9FQXpNTFA4Tjc4MHNOLzhFZnN3c09mOEZ0Y3NzTnpBMS93RGN5eXd4L3dyQnpDd3oveEpQekN6L0VETE5MRGIvQ1B6TUxEZi9GYVBNTERnNC93RGN5aXc0TVA4RnNjd3NNZjhIbXN3cy94SjF6U3cwL3hCWXl5d3hOREwvRlo3TkxUUC9GTDNOTFRYL0Nkak5MZjhGaGM0dE9mOERIY3d0TlRIL0FoYk5MVEwvRDByTkxUVC9EbW5OTFRiL0RZak5MVGYvQnV6TkxUbi9CWXZNTFRZeC93U0V6UzB5L3dOOXpTMy9BbmJPTFRiL0ROVE5MVGYvRVF6TkxUbi9DSURNTFRjeC93Ynl6UzB5L3dYcnpTMDAvd1RrelMwMi93UGR6UzAzL3hWeHpTMDUveFNRekMwNE1QOEtGTTB0L3doWnppMDAvd2RTelMwMS93Wkx6UzAzL3dWRXpTMDUrd3d0MEMwNU1Ebi9BT0hNTFRJMi93RGh6QzAwL3duQXpTMDEvd2k1elMwMy93ZXl6UzMvRHNyTUxUSXdNRG4vQU9ITUxUSTEvd0RoekMwME12OEE0Y3d0T1A4QTRjMHRPZW9aSW5KbGNYVnBjbVZrSWpwdWRXeHMreEVETmVVUkF6RXdOc2M1OGhFRjZnbHRZMnhoYzNNaU9pSmlkRzR0Y21WaFkzUnBiMjRneUFseklIUjNieTEwYUhWdFluTXRkWERzQ2pQcEFNUElRY2M3Wm1WbFpHSmhZMnMzT1RJM01Na08yRWczNmg3cy93Q0oxMEU0NmdLMDMwSFhRVG5xQzZ6L0FNcitBTW94TU9vT0NQOEFpdGhDTWZJQlZkOUN6MEl5NnhnbDMwTFhRak13T2VrT0hOOUMyRUkyNmdmSzMwTFlRam5xRjRQZlF0ZENOREExL3dFSTMwSWlOREwvQWM3ZlF1UVFjZW9kNmQ5QzJFSTE2aHZpMzBMWVFqYnFHZHZmUXRoQzZ5Ri8zMExZUWpuN0g5THhFRzdyRTd6ZmI5ZHZOVEQ3SGZqUWJ6WHJGTERmYjlodk1Ubi9FZjdNYnpJdy93SFIzMjhpTlRNeS94SVV6Rzh6NmdZNzMyL1lielQ3Rk1YUmJ6VHFIWVBmYjlodk52OFVyODF2NnlWVTMyL1liemY3R2Z6UmJ6ZnFJM3JmYjlodk9Qc2h6ZEZ2T0RuL0FpdmZieUkyTVBzZjg5QnZOakF6L3dJcjMyOGlOakg3SjhUUmJ6RTIvd0lyMzI4aU5qSTUvd0lyekc4ejZpRlkzMi9ZYnpRei93SXJ6Ry9yS1NuZmI5aHZOZnNkMGRGdk5lb2RwTjl2Mkc4Myt4c1UwVzgzNmlWMTMyL1liemovR0QzTmJ6ai9COHZmYitRVUx2OFp0ODF2T2Y4SkFOOXY1QlJGK3ltLzBHODNNVFAvQWl2ZmJ5STNNamIvQWl2TWJ6TTUvd0hwekMwMSt4OUkwUzAyK3liWDBTMDQreVM3MFMzOElwL1FMVGd3L3hvL3pTMHkveHdwelMweit4emIwUzAxNmdmcDN5M2xGTDc3Skx6U0x2d3RoOUl1L0N5bjBpNy9HaHJPTGpVdy93UTN6aTR4L3dJaXppN3JDTHpmTHNRdU5mc25PZEl1TnZzaEU5SXVPUDhiaDgwdU5qRC9DTVBPTGpIL0Jlak9MalAvQTVIT0x2OENoTTh1TnVvSGt0OHV4QzQ0NmdTMzN5N2tFOERyRHhyZkxzUXVNZjhLZE00dU0vOEhtYzR1TlA4RkFNNHVOdjhEODg0dU9Pb0pROTh1eEM3ckJtamZMdVFUOURIL0hyM09MdjhNSmM4dU5QOEpTczR1TnY4R2I4NHVPUDhGWXM0dU9lb0s5Tjh1NVMxMjZnZ1ozeTdFTGpNeS93RG16UzQwL3czV3ppNDIvd3I3emk0NC93Z2d6aTcvSTMvTkxqSXdNZnN3SDlJdU0vc3ZQOUl1TlBza2k5SXVPZjhBNXNVdStSVEJOK1VVd1RYL0ZNREdIUDhKTi84VWVOOUIyVUgvRkhqZlFmOFVNTjlDeUVML0ZERGZRdjhVTU45Q3gwTC9GRERmUXNWQy94UXczMEwvRkREZlFzZEMveFF3MzBMRlF2OFVNTjlDL3hRdzMwTElRdjhVTU45Qy94UXczMExJUXY4VU1OOUMveFFEMzBMSFF2OFQxdDlDeFVML0U2bmZRdjhUZk45Q3lFTC9FMC9mUXY4VEl0OUN5RUwvRXZYZlF2OFN5TjlDeDBML0VwdmZRc1ZDL3hKdTMwTC9Fa0hmUXNoQy94SVUzMEwvRWVmZlFzaEMveEc2MzBML0VZM2ZRc2hDNndyNDMwTFhRdjhSTTk5Q3hVSXk2ZzRBMzBMWVFqVHFEMWJmUXRoQ05lb3dTOTlDMkVJMjZnbVEzMExZUWpqcUN4VGZRdGhDT2VvTW1OOUMxMEk0TWY4SE9OOUM1QkhHL3dqRTMwTGtFZHZxRVBiZlF0aENOZW9hNU45QzEwSXhORExxREhQZlE5bEQ2ejlIMzBQWlErcytmTjlEMlVQL0NBTGZROFJETlREL0JLbmZROFJETWY4REh0OUR4RU16Nmh4SzMwUFpRelhxR1lUZlE5bEROdW9XdnQ5RDJVTTQvd25XMzBQbEV0Zi9DRXZmUThSRE1mOEd3TjlEeEVNei93VTEzMFBFUS84RHF0OUR4VU0yNmh2STMwUFpRK3NaQXQ5RDJFTTNNUDhMN2Q5RHhFTXgvd3BpMzBQRVF6UC9DTmZmUThSRE5mOEhUTjlEeEVNMi93WEIzMFBFUXpqcUhnemZROWhET09zWEQ5OUQyVVByRnlUZlE5bEQvd3g1MzBQRlErc1hUdDlEMlVQckYyUGZROWxENnhkNDMwUFlRem5yRjQzZlE5bEQ2eGVpMzBQWlErc1h0OTlEMlVQckY4emZROWxENnhmaDMwUFpRK3NYOXQ5RDEwTXlNUDhTOWQ5RHhVUHJHQ0RmUTlsRDZ4ZzEzMFBaUStzWVN0OUQyVU01L3dGUDJrUDVGVGc1NWluNU1jaFg1UlV4eENGeUlpd2lidWdWUHpZME1IMWR5RHZOR2preE9Nb2FZY2thYnVVN1VHa2lPakl3T1RVeXhYMGlWSGR2SUZUbEFKUWdWWEFpM3pZNU5UUFhOdTVLNi84SXEvOEJWLzhJcTk5RC93aXIzMFAvQ0t2ZlE5VkQvd2lyMzBQL0NLdmZRLzhJcTk5RC93aXIzMFAvQ0t2ZlE5bEQvd2lyMzBQL0NLdmZRLzhJcTk5RC93aXIzMFAvQ0t2ZlE5bEQvd2lyMzBQL0NLdmZRLzhJcTk5RC93aXIzMFAvQ0t2ZlE5aEQvd2lyMzBQL0NLdmZRLzhJcTk5RC93aXIzMFBWUS84SXE5OUQvd2lyMzBQL0NLdmZRLzhJcTk5RC93aXIzMFBaUS84SXE5OUQvd2lyMzBQNUNLczFNT2N5cEREK0NLemxDSEx3Q0NqL0hmLy9BTkwvSGYvZlFjWkIveDMvMzBIa0FxUC9BbC9mUXNSQy94My8zMEwvSGYvZlFzZEMveDMvMzBMRlF2OGQvOTlDL3gzLzMwTEhRdjhkLzk5Q3hVTC9IZi9mUXY4ZC85OUN5RUwvSGYvZlF2OGQvOTlDeUVML0ZmM2ZRdjhkLzk5Q3gwTC9IZi9mUXNWQy94My8zMEwvSGYvZlFzaEMveDMvMzBML0hmL2ZRc2hDL3gzLzMwTC9IZi9mUXNkQy94My8zMExGUXY4ZC85OUMveDMvMzBMSVF2OGQvOTlDL3gzLzMwTElRdjhkLzk5Qy94My8zMExJUWpuL0JqRGZRdjhkLzk5Q3gwTC9IZi9mUXY4ZC85OUN5RUwvSGYvZlF2OGQvOTlDeUVML0hmL2ZRdjhkLzk5Q3gwTC9IZi9mUXNWQy94My8zMEwvSGYvZlFzaEMveEdxMzBMa0Njei9IZi9mUThaRC94My8zMFBGUS84ZC85OUR4VVAvQ0FMZlE4UkQveDMvMzBQR1EvOGQvOTlEeFVQL0hmL2ZROFZEL3gzLzMwUEZRLzhkLzk5RC94VlUzMFBKUS84VlZOOUR4a1AvRlZUZlEvOFZWTjlEeWtQL0E2cmZRLzhWVk45RHlrUC9GVlRmUS84VlZOOUR5a1AvRlZUZlEvOFZWTjlEeWtQL0ZWVGZROFZEL3hWVTIwUHFFSjVkIn19fQ==&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recording-data:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recording-data:publish-95" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;eyJrIjoiOTAiLCJpIjoiMjkzODUyLTE2MjE1MjUwNzQwNjctMTlmMGVlNzUwMmI1ZTZiZSIsInIiOiIyOTM4NTItMTYyMTUyNTAwNTI2Mi0yOWE4OWM5YzM2MGY3ODM2IiwidCI6InIiLCJkIjp7ImNsaWNrcyI6eyJjIjoiTFpVVEY4IiwiZCI6Ilczc2lkQ0k2SW1NaUxDSnZJam8xTkN3aWR5STZOVElzSW1ZaU9uc2ljU0k2SWk1d2IzQnZkbVZ5TFdKdlpIa2dMbVZ1WXkxbWIzSnRMWGR5WVhCd1pYTEtFaURGQlM1cGJuQjFkQzFuY205MWNDQmJkSGx3WlQxY0luUmxlSFJjSWwwaWZTd2lZOFJZZUNJNk1UQTNNQ3dpZVNJNk1qazNMQ0p5ZUNJNk5UQXNJbko1SWpvek1YMTlYUT09In0sIm1vdmVzIjp7ImMiOiJMWlVURjgiLCJkIjoiVzNzaWRDSTZJbTBpTENKdklqbzFNU3dpZHlJNk5EUXNJbVlpT25zaWNTSTZJaTV3YjNCdmRtVnlMV0p2WkhrZ0xtVnVZeTFtYjNKdExYZHlZWEJ3WlhMS0VpSjlMQ0pqeERaNElqb3hNRGN4TENKNUlqb3pNVElzSW5MRUVqWTNMQ0p5ZVNJNk5UaDlmU3pPZGpQRmRqa3kzM2JWZGlERkJTNXBibkIxZEMxbmNtOTFjQ0JiZEhsd1pUMWNJblJsZUhSY0lsM3ZBSmd3NVFDWU1qbmtBSTk0SWpvMU1PWUFsek14ZlgxZCJ9LCJvdGhlcnMiOnsiYyI6IkxaVVRGOCIsImQiOiJXM3NpZENJNkltUWlMQ0p2SWpvMU1pd2lkeUk2TmpZc0ltRWlPbnNpWXlJNnh5RnlJaXdpYnNVT2FTSTZNakE1TlROOVhYMHN4aHhoeVJ4dUlqb3pMTWdpTkN6RkhsUjNieUJVYUhWdFluTWdWWEFpM3pZNU5UWFhObDNsQUpOYlhjVWZXMTE5ZlYwPSJ9fX0=&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recording-data:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recording-data:publish-96" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;eyJrIjoiOTAiLCJpIjoiMjkzODUyLTE2MjE1MjUwNzQwNjctMTlmMGVlNzUwMmI1ZTZiZSIsInIiOiIyOTM4NTItMTYyMTUyNTAwNTI2Mi0yOWE4OWM5YzM2MGY3ODM2IiwidCI6InIiLCJkIjp7ImNsaWNrcyI6eyJjIjoiTFpVVEY4IiwiZCI6Ilczc2lkQ0k2SW1NaUxDSnZJam8xTXl3aWR5STZOVEFzSW1ZaU9uc2ljU0k2SWk1d2IzQnZkbVZ5TFdKdlpIa2dMbVZ1WXkxbWIzSnRMWGR5WVhCd1pYTEtFaURGQlM1cGJuQjFkQzFuY205MWNDQmJkSGx3WlQxY0luUmxlSFJjSWwwaWZTd2lZOFJZZUNJNk1UQTNNQ3dpZVNJNk1qazNMQ0p5ZU1aMmNua2lPak14ZlgxZCJ9LCJtb3ZlcyI6eyJjIjoiTFpVVEY4IiwiZCI6Ilczc2lkQ0k2SW0waUxDSnZJam8wTWl3aWQ4UUhNeXdpWmlJNmV5SnhJam9pTG5CdmNHOTJaWEl0WW05a2VTQXVjMnhwWkdWeUxYZHlZWEJ3WlhJZ0xuSmxZV04wYVc5dWM4a1RQaUF1YVc1c2FXNWx5Qkk2Ym5Sb0xXTm9hV3hrS0RFcElDN0hNQ0ErSUZ0b2NtVm1QVndpYW1GMllYTmpjbWx3ZEZ4Y09uWnZhV1JjWENnd1hGd3BYQ0pkeXp3eUtTSjlMQ0pqNUFDWWVDSTZNVEF4TWl3aWVTSTZNamMyTENKeXhCSTRMamN3TURBeE1qSXdOekF6TVRJMUxDSnllU0k2TVRRdU16azVPVGt6T0RrMk5EZzBNemMxZlgwczdnRDNOZVlBOXpmckFQWWpabVZsWkdKaFkydFFZWEowYVdGc1ZtbGxkMFpwY25OMFJtRmphV3hwZEc5eUlDN0lJK29CRGNrUzVnRGs3Z0N3TmpubEFMQXpORERtQUxBME1TNHpNek16TnpRd01qUGtBSmZtQUs4ejhRQ2VOK1VBbmprdzdBR1VadVlBaG1GMGIzSno1QUdUWTJzdDVRR1p4d3hqZFhKeVpXNTB4dzdrQUkxMlplNEFqVGZtQVQwek04UjM1QUNOTlBRQWpURTBNUEFBanpVdzVRQ1BNKzBBais0Q0kyVnVZeTFtYjNKdDZnRVl5Qkx2QUlReDVnQ0VNZWdCd1RZM3huYzJNdEYyNWdLYU4rd0JvOTkyeWhJZ3hRVXVhVzV3ZFhRdFozSnZkWEFnVzNSNWNHVTlYQ0owWlhoMFhDSmQ3d0NZTU9ZQ1dUbmtBSTk0NWdEejVRR2JNWDE5WFE9PSJ9LCJvdGhlcnMiOnsiYyI6IkxaVVRGOCIsImQiOiJXM3NpZENJNkltUWlMQ0p2SWpvME15d2lkeUk2TkN3aVlTSTZleUpqSWpwYlhjVU1XM3NpYVNJNklqVXdPQ0xISEhOMGVXeGx4RHBwYzNCc1lYazZJRzV2Ym1VN0luMTlMTVlyTmpRMzN5dkpLemM0TnQ4cnlTczVNalhmSzhrck1UQTJOTjhzeVN3eU9EWXozeXpKTERNd01qSGZMTW9zTlRiL0FOdktMREU0TXpEL0FOM05MVEgvQUliT0xmOEJqY3d0TkRUL0FUak5MVFV3M3kzTkxmOEJEczB0Ti84QTRjNHQvd0RoelMwNC93SHR6QzAyTWY4QTRjNHQvd0RoelMweU10OHR6QzB6L3dEaHpTMDAvd0RoemkwNTN5M0xMVGMzL3dEaHpTMDQvd0RoemkzL0JGdk1MVGd3L3dEaHppMy9BT0hOTFRIL0E0VE1MVGswL3dEaHppMy9BT0hOTFRYL0E0VE5MVGIvQU9ITkxUZi9BT0hOTFRqL0E0VExMVGt4L3dZZHppMHgvd0RoelMweS93T0V6UzB6L3dEaHpTMDAvd0RoemkzL0E0VE1MVEkzL3dEaHpTMDQvd0RoemkzL0E0VE1MVE13L3dEaHppMy9BT0hOTFRIL0E0VE1MVFEwL3dEaHppMy9BT0hOTFRYL0E0VE5MVGIvQU9ITkxUZi9BT0hPTGY4RGhNd3ROakQvQU9ITkxUSC9BT0hPTGY4RGhNMHRNLzhBNGM0dC93RGh6UzAwL3dPRXpDMDNOLzhBNGM0dC93RGh6UzA0L3dPRXpTMDUvd0RoekMwNC93bXJ6aTMvQ2F2TkxUa3ovd0RoelMzL0Nhdk9MZjhKcTg0dE52OEE0YzB0L3dtcnp5My9BNFRLTFRJd01URC9BT0hOTGY4SnE4OHQvd09FelMwei93RGh6aTMvQU9ITkxmOEpxODB0TWpmL0FPSE9MZjhBNGMwdC93bXJ6aTA1L3dEaHpDMHovd21yenkzL0E0VE1MVFF6L3dEaHpTMy9DYXZQTGY4RGhNMHQvdzQ3enkzL0FPSE5MZjhKcTgwdE9QOEljTTR0L3dod3p5My9BV2pNTFRuL0NIRFBMZjhDU2MwdC93aHd6aTNxQWU5eVpYRjFhWEpsWkNJNmJuVnNiSDE5WFN6a0VQSmJYY1V1N0JEOE5PVVEvREV3K2hEKyt3VG5ZbXh2WTJ2ckFJTTMrd1NNMEN3NCt3MkMwQ3c1K3cwbjBDd3hNVEw2QVdEUUxUSTVNdm9CNTlBdE16RDdCMXJSTFRZeS93RGd6QzA0L3d1U3pDdzUrd1llMFZrNS93LzJ5eXcwTVBzS2d0QlpOREgvRXBUTkxQOEJ2ODFaTXY4SWtzd3NNemI2Qk9EUldUVC9CcUxNTERVdy93TEp6UzMvQkxMTUxEYjdDT25SV1RmL0EvM05MUHNHK2RGWk9EWC9BbS9MTERuN0RyVFJXVGs0L3dHOXlpdzFNUHNNeE5CWk5md0QxZEJaTVRuL0FiM01MVEwvQ2ZQTUxETXkvd0c5ekMwMC93Z0R6U3o3RlRIUldUWC9CQ3pNTERiL0JDek5XVGIvRGM3TUxEZjdDRnJSV1RqL0ZZbk5MUHNIcGRGWk9UWC9BYjNLTERZdyt3NGwwRmsyTURuL0FiM0xMREg3RmVEUldUTC9DMVROTERuL0FiM01MVFAvQ1dUTUxEUXovd0c5ekMwMS93aXZ6Q3ovRHdMTkxEZi9CcHJNTERuL0dIM0xMRGN3TmY4QkNjc3NNZjhMMU13c00vOFRZc3dzL3hGRnpTdzIvdzhvekN3My94YTJ6Q3c0T1A4QTNNb3NPREQvQjgzTUxESC9DL3JNTFA4VGlNMHNOUDhSYThzc01UUXkveGF4elMwei94WFF6UzAxL3hUdnpTMy9CNkhPTFRuL0F4M01MVFV4L3dJV3pTMHkveEJkelMwMC93OTh6UzAyL3c2YnpTMDMvd2tJelMwNS93Ykd6QzAyTWY4RWhNMHRNdjhEZmMwdC93SjJ6aTAyL3hNQXpTMDMveElmelMwNS93cWN6QzAzTWY4SVdzMHRNdjhHR00wdE5QOEU1TTB0TnY4RDNjMHROLzhXaE0wdE9mOFZvOHd0T0REL0RERE5MZjhKN3M0dE5QOEhyTTB0TmY4R1M4MHROLzhGUk0wdE9mc09TZEF0T1RBNS93RGh6QzB5TnY4QTRjd3ROUDhMZ3MwdE5mOEpRTTB0Ti84SHNzMHQveUVNekMweU1EQTUvd0RoekMweU5mOEE0Y3d0TkRML0FPSE1MVGovQVdqRUxma1JvVGJsRWFFMk1jZEI4aEdnNmdsSVkyeGhjM01pT2lKaWRHNHRjbVZoWTNScGIyNGd5QWx6SUhSM2J5MTBhSFZ0WW5NdGRYRHFBS0RyR09USVFjYzdabVZsWkdKaFkyczNPVEkzTU1rTzJFZzM2aC9hL3dDSjEwSHJBU2ZmUWRkQk9lb01hUDhBeXY0QXlqRXc2Zy8vL3dDSzJFSXg4Z0ZWMzBMUFFqTHJHUlBmUXRkQ016QTU2UXlaMzBMWVFqYnFCNlhmUXRoQ09lb1ljZDlDMTBJME1EWC9BUWpmUWlJME12OEJ6dDlDNUJKbzZoWm4zMExZUWpYcUhORGZRdGhDTnVvYXlkOUMyRUxySW0zZlF0aEM2eFV1MzBMWFFqWHJKcC9mUXRoQ01qRC9BVXJmUWlJMU0rb2ZsOTlDMkVJMDZoMlEzMExZUXVzbE5OOUMyRUkzNmlNdDMwTFlRamc1L3dGSzMwSWlOakF6L3dGSzMwSWlOakUyL3dGSzMwSWlOalBxSUZmZlF0aEM2eWY3MzBMWVFqWDdIS1B5RVZIcUhIYmZiOWh2Ti9za2RORnZOK29rUjk5djJHODQveGdZelc4NC93V3YzMi9rRWUzL0dXYk5iem4vQnVUZmIrUVNCUHNva2RCdk56RXovd0lyMzI4aU56STIvd0lyekc4eTZpSWwzMi9ZYnpNNS93SXJ6RzgwNmh1LzMyL1lielg3SHA3UmJ6WHFIbkhmYjlodk52c2QvOUZ2TnVvZDB0OXYyRzg0K3lTVjBXODRNdjhDSzk5dklqZjhJcnZSYnpucUd3dmZiOWR2T0REL0c2Yk1iemd4L3dsVTMyODZJamd5L3gxNnpXOHkvd3NOMzIva0ZJdjdMeGpSYnpQcUcwM2ZiOWh2TmVvSXB0OXZ4QzNxRzJQZmI5ZHZNVFF5K3lZaTBIQXhORExxR3lMZmNkbHgvQzh3MG5Ickx3VGZjZGx4L0M2VDBuSC9IUS9PTGpVdy93ZFJ6aTR4L3dSMnppN3JDbTdmTHNRdU5mc3BKZEl1TnZzb1JkSXVPUDhlZk0wdU5qRC9IRHZPTGpIL0NRTE9MalAvQmlmT0x2OERUTTh1TnVvS1V0OHV4QzQ0NmdmUjN5N2tGSm5yRUJqZkxzUXVNZjhkMXM0dU0vOGJsYzR1TlA4SDJNNHVOdjhFL2M0dU9Pb0wxdDh1eEM3ckNZTGZMdVFVelRIL0liTE9MdjhmY2M4dU5QOGRNTTR1TnY4SmljNHVPUDhHcnM0dU9lb05XdDh1NVM5aTZnc3ozeTdFTGpQcUNGamZMc1F1TlA4aERNNHVOdjhleTg0dU9QOExPczR1L3lYRXpTNHlNREg3TWd2U0xqUDdNU3ZTTGpUN0o5dlNMam4vQVhERkx2a1Z2ampsRmI0eU04ZEMveFcrL3djWi94VjIzMEhYUWY4VmR0OUIveFV1MzBMSVF2OFZMdDlDL3hVdTMwTEhRdjhWTHQ5Q3hVTC9GUzdmUXY4Vkx0OUN4MEwvRlM3ZlFzVkMveFV1MzBML0ZTN2ZRc2hDL3hVdTMwTC9GUzdmUXNoQy94VXUzMEwvRlM3ZlFzZEMveFV1MzBMRlF2OFZMdDlDL3hVdTMwTElRdjhWTHQ5Qy94VXUzMExJUXY4Vkx0OUMveFV1MzBMSFF2OFZMdDlDeFVML0ZTN2ZRdjhWTHQ5Q3lFTC9GUzdmUXY4VkFkOUN5RUwvRk5UZlF2OFVwOTlDeUVMckN2amZRdGRDL3hSTjMwTEZRdjhVSU45Qy94UHozMExJUXY4VHh0OUMveE9aMzBMSVF2OFRiTjlDL3hNLzMwTEhRdjhURXQ5Q3hVTC9FdVhmUXY4U3VOOUN5RUwvRW92ZlF2OFNYZDlEeWtQL0VpL2ZROFZENjBCbzMwUFpRLzhJQXQ5RHhFTTFNUDhFcWQ5RHhFTXgvd01lMzBQRVF6UHFMMnJmUTlsRE5lb3RQdDlEMlVNMjZoblkzMFBaUXpqL0NkYmZRK1VTMS84SVM5OUR4RU14L3diQTMwUEVRelAvQlRYZlE4UkQvd09xMzBQRlF6YnFMMnpmUTlsRDZ4d2MzMFBZUXpjdy93dnQzMFBFUXpIL0NtTGZROFJETS84STE5OUR4RU0xL3dkTTMwUEVRemIvQmNIZlE4UkRPT294bXQ5RDJFTTQ2eGNQMzBQWlErc1hKTjlEMlVQL0RIbmZROFZENnhkTzMwUFpRK3NYWTk5RDJVUHJGM2pmUTloRE9lc1hqZDlEMlVQckY2TGZROWxENnhlMzMwUFpRK3NYek45RDJVUHJGK0hmUTlsRDZ4ZjIzMFBYUXpJdy94TDEzMFBGUStzWUlOOUQyVVByR0RYZlE5bEQ2eGhLMzBQWlF6bi9BaGphUS9rVk9Ebm5QSmZzRlRuR0luSWlMQ0p1NkJWQU5qUXdmVjNJUE0wYU9URTR5aHBoeVJwdUlqb3pMTVFnTWpBNU5UVEZmaUpVZDI4Z1ZPVUFsU0JWY0NMZk5qazFOZGMyN1JYWS93V0kvd0ZZL3dXSTMwUC9CWWpmUS84RmlOOUQxa1AvQllqZlEvOEZpTjlEL3dXSTMwUC9CWWpmUS84RmlOOUQyVVAvQllqZlEvOEZpTjlEL3dXSTMwUC9CWWpmUS84RmlOOUQyVVAvQllqZlEvOEZpTjlEL3dXSTMwUC9CWWpmUS84RmlPUUZpRFV4NVFXSU56bitCWWZsQlUzM0JZbkVIRFgvQlZVNU5UYi9CWXZXTmpmWE52OGJZLzhCRnZBQldmOGJZOTlCL3h0ajMwSEdRZjhiWTk5Q3hVTC9HMlBmUXY4Ylk5OUN4MEwvRzJQZlFzVkMveHRqMzBML0cyUGZRc2RDL3h0ajMwTEZRdjhiWTk5Qy94dGozMExJUXY4Ylk5OUMveHRqMzBMSVF2OFRZZDlDL3h0ajMwTEhRdjhiWTk5Q3hVTC9HMlBmUXY4Ylk5OUN5RUwvRzJQZlF2OGJZOTlDeUVML0cyUGZRdjhiWTk5Q3gwTC9HMlBmUXNWQy94dGozMEwvRzJQZlFzaEMveHRqMzBML0cyUGZRc2hDL3h0ajMwTC9HMlBmUXNoQ09mOEdNTjlDL3h0ajMwTEhRdjhiWTk5Qy94dGozMExJUXY4Ylk5OUMveHRqMzBMSVF2OGJZOTlDL3h0ajMwTEhRdjhiWTk5Q3hVTC9HMlBmUXY4Ylk5OUN5RUwvRjduZlF1UUp6UDhiWTk5RHhrUC9HMlBmUThWRC94dGozMFBGUS84SUF0OUR4RVAvRzJQZlE4WkQveHRqMzBQRlEvOGJZOTlEeFVQL0cyUGZROFZEL3h0ajMwUEZRLzhiWTk5RHhFUC9HMlBmUThaRC94dGozMFBGUS84Ylk5OUR4VVAvQTZyZlEvOGJZOTlEeWtQL0cyUGZRLzhiWTk5RHlrUC9HMlBmUS84Ylk5OUR5a1AvRzJQZlEvOGJZOTlEeWtQL0ZkdmZRLzhWMjk5RHlrUC9GZHZmUS84VjI5OUR5a1AvRmR2ZlEvOFYyOTlEeWtQL0ZkdmZRLzhWMjk5RHlrUC9GZHZmUThWRC94WGIzMFBGUS84VjI5OUQveFhiMzBQckZFbGQifX19&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recording-data:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recordings:publish-97" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;eyJrIjoiOTAiLCJpIjoiMjkzODUyLTE2MjE1MjUwMDUyNjItMjlhODljOWMzNjBmNzgzNiIsInAiOiIyOTM4NTItMTYyMTUyNTA3NDA2Ny0xOWYwZWU3NTAyYjVlNmJlIiwidCI6InUiLCJ0eSI6MSwieSI6IjIwMjEwNTIwIn0=&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recordings:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recording-data:publish-101" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recording-data:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recording-data:publish-102" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recording-data:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recording-data:publish-103" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recording-data:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recording-data:publish-104" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recording-data:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/projects/lucky-orange/topics/recording-data:publish-106" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;messages&quot;:[{&quot;data&quot;:&quot;&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">pubsub.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/projects/lucky-orange/topics/recording-data:publish</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ya29.c.KqIB_wdgWJp1U4BU9LXcJUNZ_cWFIjkh_x3Z2pSdj4NrEmPpgH77nCJ_bAiEnKD3Ifyai5W_K7O52Jq2SAHWSofggxI8lTmvRIy6jh8NHfSwt2MiYkPwgZwNU3ERVpS4MK0PwU_0M594k2EoSbJgYh9Vez53m0y6WNNIRd6modCdeSVHxAlK1ePMCIq0vPlBtKw34YZmShEbuUz5bg70zm5Oo6Xc</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/s/W/xdds/13NGMpBooOIHlC7b/d/1621525165160/1621525165160%0A109.01064929583981%0A7%0A4%0Ad%0Anull-105" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">widget-mediator.zopim.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/s/W/xdds/13NGMpBooOIHlC7b/d/1621525165160/1621525165160%0A109.01064929583981%0A7%0A4%0Ad%0Anull</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/Common/AddFeedback-108" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="userId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                    <stringProp name="Argument.value">131926</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="widgetId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">widgetId</stringProp>
                    <stringProp name="Argument.value">792</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="pageId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pageId</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="responseId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">responseId</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="IsAck" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsAck</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="comment" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">comment</stringProp>
                    <stringProp name="Argument.value">This is Facilitator Feedback.</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="appId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">appId</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="feedbackEmojiId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">feedbackEmojiId</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="emojiTypeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">emojiTypeId</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="widgetTypeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">widgetTypeId</stringProp>
                    <stringProp name="Argument.value">15</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="divId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">divId</stringProp>
                    <stringProp name="Argument.value">feedbackPartialViewFirstFacilitor</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="isFeedbackCommon" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isFeedbackCommon</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/Common/AddFeedback</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/coursecommunity/unconscious-bias</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Logout" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/userprofile/logoff-132" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/userprofile/logoff</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/coursecommunity/unconscious-bias</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-133" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bsg.trainup.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://bsg.trainup.net/coursecommunity/unconscious-bias</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
