<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.example.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">www.example.com</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="false">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">D:\\ATG_Project\\2021\\chromedriver_win32\\chromedriver_win32_Version91\\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">true</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">true</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host"></stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
          <stringProp name="WebDriverConfig.https_host"></stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">D:\\ATG_Project\\2021\\chromedriver_win32_New\\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">true</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">true</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="jp@gc - WebDriver Sampler" enabled="true">
          <stringProp name="WebDriverSampler.script">// We import java packages in Javascript
var pkg = JavaImporter(org.openqa.selenium)
var support_ui = JavaImporter(org.openqa.selenium.support.ui.WebDriverWait)
// We will timeout waits after 5 seconds
var wait = new support_ui.WebDriverWait(WDS.browser, 5000)
var conditions = org.openqa.selenium.support.ui.ExpectedConditions

WDS.sampleResult.sampleStart()
WDS.browser.get(&apos;https://stagingbis.epicbrokers.com/&apos;)
//WDS.browser.navigate(&apos;https://qabis.epicbrokers.com/&apos;);
wait.until(conditions.presenceOfElementLocated(pkg.By.id(&apos;signInName&apos;)))
var currentURL = WDS.browser.getCurrentUrl()
WDS.log.info(&apos;CurrentURL:&apos;+currentURL)
var nonce = currentURL.split(&quot;nonce=&quot;)[1]
WDS.vars.put(&quot;State&quot;,nonce)
WDS.log.info(&apos;nonce:&apos;+nonce)

/*var email = WDS.browser.findElement(pkg.By.id(&apos;email&apos;))
email.sendKeys([&apos;Pushkar.Masodkar@harbingergroup.com&apos;])

var password = WDS.browser.findElement(pkg.By.id(&apos;password&apos;))
password.sendKeys([&apos;3lnA3CsNAODJs47Q&apos;])

var password = WDS.browser.findElement(pkg.By.id(&apos;next&apos;))
password.click()

var accesstokencurrentURL = WDS.browser.getCurrentUrl()
WDS.log.info(&apos;accesstokencurrentURL:&apos;+accesstokencurrentURL)*/
WDS.sampleResult.sampleEnd()
</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">D:/ATG_Project/apache-jmeter-5.3/bin/Scripts/EPIC/UsernamePassword.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">email, password</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="LaunchApplication" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/-1" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/v2.0/.well-known/openid-configuration-9" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">B2C_1A_SUSIFPR</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/discovery/v2.0/keys-10" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">b2c_1a_susifpr</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/discovery/v2.0/keys</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize-11" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">b2c_1a_susifpr</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">b8f589f9-3bed-490d-ae25-8adc95b6914a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">${State}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile ${scheme}://epicnonprodb2c.onmicrosoft.com/api/user_impersonation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">${State}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - StateProperties" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">StateProperties</stringProp>
                <stringProp name="RegexExtractor.regex">StateProperties=(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">StatePropertiesNotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - x-csrf-token" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                <stringProp name="RegexExtractor.refname">x-csrf-token</stringProp>
                <stringProp name="RegexExtractor.regex">x-ms-cpim-csrf=(.*?); domain=</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">CSRF_Token_Not_Found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - pageViewId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">pageViewId</stringProp>
                <stringProp name="RegexExtractor.regex">pageViewId&quot;:&quot;(.+?)&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">pageViewIdNotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/bislogin/login.html-13" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">blobstoragebisdevqa.blob.core.windows.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bislogin/login.html</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/B2C_1A_SUSIFPR/client/perftrace?tx=StateProperties=eyJUSUQiOiI2ODIwZmNkMy1jOGU4LTQ0NGMtYjIwMi1mOTZiZWM2MjQxYzkifQ&amp;p=B2C_1A_SUSIFPR-14" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;navigation&quot;:{&quot;type&quot;:0,&quot;redirectCount&quot;:0},&quot;timing&quot;:{&quot;navigationStart&quot;:1625830675335,&quot;unloadEventStart&quot;:0,&quot;unloadEventEnd&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1625830675335,&quot;domainLookupStart&quot;:1625830675368,&quot;domainLookupEnd&quot;:1625830675368,&quot;connectStart&quot;:1625830675369,&quot;connectEnd&quot;:1625830675370,&quot;secureConnectionStart&quot;:1625830675369,&quot;requestStart&quot;:1625830675370,&quot;responseStart&quot;:1625830675378,&quot;responseEnd&quot;:1625830677787,&quot;domLoading&quot;:1625830677776,&quot;domInteractive&quot;:1625830677938,&quot;domContentLoadedEventStart&quot;:1625830677940,&quot;domContentLoadedEventEnd&quot;:1625830677941,&quot;domComplete&quot;:1625830684803,&quot;loadEventStart&quot;:1625830684803,&quot;loadEventEnd&quot;:1625830684804},&quot;entries&quot;:[{&quot;name&quot;:&quot;${scheme}://epicnonprodb2c.b2clogin.com/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize?p=b2c_1a_susifpr&amp;response_type=token%20id_token&amp;client_id=b8f589f9-3bed-490d-ae25-8adc95b6914a&amp;state=${State}&amp;redirect_uri=${scheme}%3A%2F%2Fstagingbis.epicbrokers.com&amp;scope=openid%20profile%20https%3A%2F%2Fepicnonprodb2c.onmicrosoft.com%2Fapi%2Fuser_impersonation&amp;nonce=${State}&quot;,&quot;entryType&quot;:&quot;navigation&quot;,&quot;startTime&quot;:0,&quot;duration&quot;:9470,&quot;initiatorType&quot;:&quot;navigation&quot;,&quot;nextHopProtocol&quot;:&quot;http/1.1&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:0,&quot;domainLookupStart&quot;:33,&quot;domainLookupEnd&quot;:33,&quot;connectStart&quot;:33,&quot;connectEnd&quot;:34,&quot;secureConnectionStart&quot;:33,&quot;requestStart&quot;:34,&quot;responseStart&quot;:43,&quot;responseEnd&quot;:43,&quot;transferSize&quot;:441234,&quot;encodedBodySize&quot;:438981,&quot;decodedBodySize&quot;:438981,&quot;serverTiming&quot;:[],&quot;unloadEventStart&quot;:0,&quot;unloadEventEnd&quot;:0,&quot;domInteractive&quot;:2604,&quot;domContentLoadedEventStart&quot;:2605,&quot;domContentLoadedEventEnd&quot;:2606,&quot;domComplete&quot;:9469,&quot;loadEventStart&quot;:9469,&quot;loadEventEnd&quot;:9470,&quot;type&quot;:&quot;navigate&quot;,&quot;redirectCount&quot;:0},{&quot;name&quot;:&quot;${scheme}://blobstoragebisdevqa.blob.core.windows.net/bislogin/login.html&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:2589,&quot;duration&quot;:6862,&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;nextHopProtocol&quot;:&quot;http/1.1&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:2589,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:9451,&quot;transferSize&quot;:0,&quot;encodedBodySize&quot;:0,&quot;decodedBodySize&quot;:0,&quot;serverTiming&quot;:[]},{&quot;name&quot;:&quot;first-contentful-paint&quot;,&quot;entryType&quot;:&quot;paint&quot;,&quot;startTime&quot;:9707,&quot;duration&quot;:0}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/B2C_1A_SUSIFPR/client/perftrace?tx=StateProperties=${StateProperties}&amp;p=B2C_1A_SUSIFPR</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize?p=b2c_1a_susifpr&amp;response_type=token%20id_token&amp;client_id=b8f589f9-3bed-490d-ae25-8adc95b6914a&amp;state=${State}&amp;redirect_uri=${scheme}%3A%2F%2Fstagingbis.epicbrokers.com&amp;scope=openid%20profile%20https%3A%2F%2Fepicnonprodb2c.onmicrosoft.com%2Fapi%2Fuser_impersonation&amp;nonce=${State}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="X-CSRF-TOKEN" elementType="Header">
                    <stringProp name="Header.name">X-CSRF-TOKEN</stringProp>
                    <stringProp name="Header.value">${x-csrf-token}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/dbd5a2dd-bnh9-5dcfogir79cyiotjz4gxbyxi5a2-cpmznalecs/logintenantbranding/0/bannerlogo-15" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ts" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ts</stringProp>
                    <stringProp name="Argument.value">637564911490585795</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">secure.aadcdn.microsoftonline-p.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/dbd5a2dd-bnh9-5dcfogir79cyiotjz4gxbyxi5a2-cpmznalecs/logintenantbranding/0/bannerlogo</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login and Dishboard Display" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/B2C_1A_SUSIFPR/SelfAsserted?tx=StateProperties=eyJUSUQiOiI2ODIwZmNkMy1jOGU4LTQ0NGMtYjIwMi1mOTZiZWM2MjQxYzkifQ&amp;p=B2C_1A_SUSIFPR-16" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="request_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">request_type</stringProp>
                    <stringProp name="Argument.value">RESPONSE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="signInName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">signInName</stringProp>
                    <stringProp name="Argument.value">${email}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="Argument.value">${password}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/B2C_1A_SUSIFPR/SelfAsserted?tx=StateProperties=${StateProperties}&amp;p=B2C_1A_SUSIFPR</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize?p=b2c_1a_susifpr&amp;response_type=token%20id_token&amp;client_id=b8f589f9-3bed-490d-ae25-8adc95b6914a&amp;state=${State}&amp;redirect_uri=${scheme}%3A%2F%2Fstagingbis.epicbrokers.com&amp;scope=openid%20profile%20https%3A%2F%2Fepicnonprodb2c.onmicrosoft.com%2Fapi%2Fuser_impersonation&amp;nonce=${State}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="X-CSRF-TOKEN" elementType="Header">
                    <stringProp name="Header.name">X-CSRF-TOKEN</stringProp>
                    <stringProp name="Header.value">${x-csrf-token}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/B2C_1A_SUSIFPR/api/CombinedSigninAndSignup/confirmed-17" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="rememberMe" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rememberMe</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="csrf_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">csrf_token</stringProp>
                    <stringProp name="Argument.value">${x-csrf-token}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="tx" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">tx</stringProp>
                    <stringProp name="Argument.value">StateProperties=${StateProperties}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">B2C_1A_SUSIFPR</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="diags" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">diags</stringProp>
                    <stringProp name="Argument.value">{&quot;pageViewId&quot;:&quot;${pageViewId}&quot;,&quot;pageId&quot;:&quot;CombinedSigninAndSignup&quot;,&quot;trace&quot;:[{&quot;ac&quot;:&quot;T005&quot;,&quot;acST&quot;:1625830677,&quot;acD&quot;:4},{&quot;ac&quot;:&quot;T021 - URL:${scheme}://blobstoragebisdevqa.blob.core.windows.net/bislogin/login.html&quot;,&quot;acST&quot;:1625830677,&quot;acD&quot;:6868},{&quot;ac&quot;:&quot;T029&quot;,&quot;acST&quot;:1625830684,&quot;acD&quot;:93},{&quot;ac&quot;:&quot;T019&quot;,&quot;acST&quot;:1625830684,&quot;acD&quot;:111},{&quot;ac&quot;:&quot;T004&quot;,&quot;acST&quot;:1625830684,&quot;acD&quot;:8},{&quot;ac&quot;:&quot;T003&quot;,&quot;acST&quot;:1625830685,&quot;acD&quot;:6},{&quot;ac&quot;:&quot;T035&quot;,&quot;acST&quot;:1625830686,&quot;acD&quot;:0},{&quot;ac&quot;:&quot;T030Online&quot;,&quot;acST&quot;:1625830686,&quot;acD&quot;:0},{&quot;ac&quot;:&quot;T002&quot;,&quot;acST&quot;:1625830745,&quot;acD&quot;:0},{&quot;ac&quot;:&quot;T018T010&quot;,&quot;acST&quot;:1625830741,&quot;acD&quot;:4360}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/B2C_1A_SUSIFPR/api/CombinedSigninAndSignup/confirmed</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize?p=b2c_1a_susifpr&amp;response_type=token%20id_token&amp;client_id=b8f589f9-3bed-490d-ae25-8adc95b6914a&amp;state=${State}&amp;redirect_uri=${scheme}%3A%2F%2Fstagingbis.epicbrokers.com&amp;scope=openid%20profile%20https%3A%2F%2Fepicnonprodb2c.onmicrosoft.com%2Fapi%2Fuser_impersonation&amp;nonce=${State}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - AccessToken" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">AccessToken</stringProp>
                <stringProp name="RegexExtractor.regex">access_token=(.+?)&amp;amp;token_type</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">AccessTokenNotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/v2.0/.well-known/openid-configuration-20" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">B2C_1A_SUSIFPR</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/discovery/v2.0/keys-21" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">b2c_1a_susifpr</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/discovery/v2.0/keys</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/Account/getuserdetails-22" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/Account/getuserdetails</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/Account/getuserdetails-23" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/Account/getuserdetails</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - encryptedClientId" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">encryptedClientID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;encryptedClientId&quot;:&quot;(.+?)&quot;,&quot;encryptedUserId&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">encryptedClientIdNotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - EncriptedUserID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">encryptedUserID</stringProp>
                <stringProp name="RegexExtractor.regex">encryptedUserId&quot;:&quot;(.+?)&quot;}</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">encriptedUserIDNotFound</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondAction/checkisquestawebrunning-24" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondAction/checkisquestawebrunning</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/assets/images/nav-user.svg-32" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/assets/images/nav-user.svg</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/assets/images/new-logo.svg-30" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/assets/images/new-logo.svg</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/UserManagement/pendingnotification-31" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/UserManagement/pendingnotification</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/Alert/get-alert-33" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/Alert/get-alert</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/Alert/get-alert-39" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/Alert/get-alert</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/UserManagement/pendingnotification-38" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/UserManagement/pendingnotification</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondAction/checkisquestawebrunning-36" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondAction/checkisquestawebrunning</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/clientmanagement/getcountries-42" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/clientmanagement/getcountries</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getclientsearchcategory-40" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondManagement/getclientsearchcategory</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getBondCategory-43" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondManagement/getBondCategory</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getimporternumbertype-41" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondManagement/getimporternumbertype</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/assets/images/resume.svg-46" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/assets/images/resume.svg</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/bondmanagement/v2</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondFeatures/getallbondstatus-45" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondFeatures/getallbondstatus</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/ClientManagement/ischbclient?clientId=UUWGKGjZiXM0HrHFNcDeUw%3D%3D-44" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/ClientManagement/ischbclient?clientId=${encryptedClientID}</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondFeatures/getsearchbondtype-48" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondFeatures/getsearchbondtype</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getclientsearchcategory-50" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondManagement/getclientsearchcategory</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getBondCategory-51" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondManagement/getBondCategory</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/clientmanagement/getcountries-49" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/clientmanagement/getcountries</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getimporternumbertype-52" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondManagement/getimporternumbertype</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondFeatures/getallbondstatus-53" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondFeatures/getallbondstatus</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/ClientManagement/ischbclient-54" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="clientId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">clientId</stringProp>
                    <stringProp name="Argument.value">UUWGKGjZiXM0HrHFNcDeUw==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/ClientManagement/ischbclient</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondFeatures/getsearchbondtype-55" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondFeatures/getsearchbondtype</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getbonds/10/1-56" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondManagement/getbonds/10/1</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,content-type,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getbonds/10/1-57" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;suretyReferenceNumber&quot;:&quot;&quot;,&quot;bondNumber&quot;:&quot;&quot;,&quot;principalName&quot;:&quot;&quot;,&quot;principalNumber&quot;:&quot;&quot;,&quot;bondCategoryDescription&quot;:&quot;&quot;,&quot;clientName&quot;:&quot;&quot;,&quot;bondStatusDescription&quot;:&quot;&quot;,&quot;transactionId&quot;:&quot;&quot;,&quot;startDate&quot;:null,&quot;endDate&quot;:null,&quot;bondSearchCategoryId&quot;:2,&quot;bondCategoryId&quot;:&quot;&quot;,&quot;bondStatusId&quot;:&quot;&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondManagement/getbonds/10/1</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/assets/images/next.svg-58" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/assets/images/next.svg</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/bondmanagement/v2</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/webp,*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondFeatures/getsearchcriteriabyuserid-59" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondFeatures/getsearchcriteriabyuserid</stringProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">GET</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondFeatures/getsearchcriteriabyuserid-60" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/BondFeatures/getsearchcriteriabyuserid</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/telemetry/dc8ad435-bc93-4b23-b7b2-8850e9a10e3f/third-party-modules/Firefox/89.0.2/release/20210622155641?v=4-88" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�[ys�6��*����n��&#x0; &#x8;�����i�Vr4�&#x1d;Ϯ�R�$��#6��#.&#x7f;�}&#xf;`_R�c;��&#x7f;�I�h�����&#x0;�à����x�.�:u+U���L�\7��A��P�H�r?p�$�]&#x1e;3ߍØ�R&#x6;DG�&#x12;��anRk�fe1Q-n�&#x8;�.	]&#x12;������&gt;�D��&#x17;f�躁��c~4PU�g�Y88�0Pu��Z��]���I�&#xd;
&#xe;K�.�ӓ�ߗ&#x8;�h&#x10;&#x8;Na�P+�:�j=/�v�&#x1f;��#&#x1e;��4k�\���x�F&#x17;iYC�Y�[��&#xd;
�`f;/�Ձ�wUR��qfI�&#x12;�]57	2�TE�s�u�U�&#x7;&#x1f;a#u��*E����v�#=&#x1a;��|��&#x3;�i��F��&lt;&#x7f;e����i��,�&#x1f;~����ٯ����|&lt;&lt;&#x17;�K�&#x1c;��g�ޒ&#x19;z�&apos;i�T�lQ�tt��)�DWeV����&#x18;ƀ����j&#x1;���G_r~��������&#x14;&#x8;�q�&#xe;�}&quot;β�.�r�:o3��m�Tuz�j��U&#x5;&#x6;&#x10;gy��;�]�g�R&#x5ff;��ˤΪv\&#x16;m]�_�I4�&#x7;+��D7&#xd;��àU�G�x�&#x13;��&#xf;��]PŰ^�j4&#x18;�&#x1f;E�&apos;�O&#x3;&#x1;���`J��6�rv98f�&#x17;H&#x18;jT���o�&#x7f;��&#x1c;&lt;&#x7;��)y����^&#xd;&#x16;�Z��&#x7f;S��J㖑&lt;&#x1a;�&#xf;�!^&#x18;J&#x1f;v[�&#x7f;�&apos;&#x13;0^&#x19;q����p����&#x0;&#x16;j��&#xe;��U�#���G�i&#xd;
T&#x1;-&#x3;r�D*�L&#x8;�&#x19;���H��q����&#xd;
&lt;&#x15;H&#x1f;&#x1c;�U�hK�e��nm&#x1c;��A�&lt;dG&#x10;ߣL|&#x19;C&#xf;�&#x15;��C��ϡ&#x14;L&#x2;@$��ʠ3�6v�ҫ��?S&#x15;(�&#x1d;&#x18;��2�J�&quot;�C&#x1a;I&#x19;&#x5;BNGA&#x10;��&#x18;��&#x4;��_lJ&#x7;��&#xd;�&#x16;&#x4;ۯ���&#x14;���&#x11;&#xb;}2&quot;&#x13;2���&#x14;4d&#x11;�&#xd;
jW\�&#x1a; &#xb;y뗉�(�&#x6;���p&lt;&quot;r4��	t��0��Ʉ�e&#x1b;&#x8;���	&#x19;2&#x1a;��p��ԟ&#xd;9&#xd;�3£�t4&#x1b;�&#x10;&#x16;&#x1;�M��w�ȑ�@=l��#*9&#x17;!�$�C&#x12;&#x5;&#x1;&#x3;�~r�&#x1e;�@���&amp;�/��&#x1d;�(��A�?�aHd`��ˈږ�&#x18;O�LF(�v+&#xd;
&#x14;��4aS&#x19;&#x4;�&amp;��&#x4;&#x16;`̱s�0!L3&#x2;��x�&quot;�}Ȟ&#x1f;HC&#x14;&#xd;y&#x10;�O�&#x3;C;���&#x5;�?B`�Q$&#xd;ɿD&#x11;&#x1;�x&#x1;&apos;&lt;&#xc;&#xe;���^�?&lt;#����Q��b��&#x18;�|v&#x18;�&#x19;&apos;q�0&#x12;�&#x7;�!4�(X�&#x17;q�&#x1d;G��ȷ�#���dD�Pz&#x1;&#x4;ϐ&#x1e;�&#x11;�:�(dϊ&quot;��&#x11;/&#x12;Q�&#x1f;����&#x8;��%&#x7;}��a�?&#x0;#�R/b!�&quot;����w&#x18;��`$��6�5@	KR�&#x18;K��=&lt;�!~J&#x16;&#x5;$�П&#xf;@���H��Y!%8X��p�o��g����}�I&#x1a;�E&#x1c;?+��&#x3;�&quot;��@=�&#x17;1���r�RJ&#xf;&#x15;c��C?�ǾP����y&#xd;
��&#xe;�ľ��!��E�U��&#xb;$&#x1b;��&#x1c;�C�#�&#x13;&#x6;�&#xe;�h8&#x11;�Dd&#x1a;�&#x5;sմ���&#xc;F�L�&#x13;8#�&#xd;
��h:&#x13;b&#x18;��&#xf;C6�#a&#x17;�\��D#:����&#x10;&quot;&#xc;F�I&#x18;�c&#x1;B󧁄�욺J�v��(&#x18;��4�)&#x1;X��C!،�&#x2;&#x11;��i/��X�vh&#xb;��̘&#xf;���HDr&#x16;&#x12;&#xe;��&apos;�����&quot;��~�d&#x1c;̢�0�f&#x1;�e&#x16;&gt;�Ϧ��&#x5;�,&#x8;�l&amp;�L&#x10;&quot;�&apos;&#x16;t��&#xe;�4`#&#x7f;�g������&#x18;�}1�f@�&#x8;8&#x14;�6�~&#x11;a&lt;&#x0;��&#x1f;�#&#x1;��L�L��0&#x18;2?�|&#xf;Y�&#x1a;��Z&#x0;|A&apos;G&#xe;�&#x11;P&#x1a;J���0b��&apos;�m�&#x4;�3-&#x1a;��ۖ�L_&#x0;�Ri&amp;B3&#x14;QH��0��f�Sl�#F�&#x1e;�6&#x5;��p�&#x4;��P6&#x7;�	 ��i�&#x1;&#xd;&quot;�&#x1b;�(%�ĺ&#x19;�	�&#x4;eQf��r{@&#x8;ZavW� ��8.�&#x4;&#x13;�4x`&amp;F�&#x2;(��&#xd;
&#x1;���&#xd;
f&#x7f;Da`�� ^_���(�͈���dLf��A�g����&gt;�&#xd;
&#x18;O�4���&#x15;�n&#x1c;����$&#xd;
b�D�&#x5;�&#x8;�MV��ʀ�&#x7;{�o�&#x6;�/&#x5;f�&#xf;:�`���M&#x18;Q.&#x17;|�F1�.���&quot;&#x1d;���&#x1f;&#x7;{O&#xc;�&#x1e;�&#x15;|�{Á�&#x3;�&#x8;O�8|��BW�����&#x6;&#x12;&#x1d;&#x15;�@*�&gt;�&lt;1�m&#x1;�&#x15;�&#x7;Nl�,��&#x2;*�&lt;?��ݜh���&#x7;�&quot;/����&apos;���(QD��@Lcn�w&quot;�&#x8;�8&#x12;B�&#x7;������&#x1d;�Q��{���$U��Cms��&amp;�c;B}��&#xe;&#x2;�I�js{�VY~&#xf;���&#x3;� p[�G]UY�&#x18;&#x1c;Cʘ�D%K��p&#x18;��������)S+�ӳ���x&#x8;�;�w�.P8��`������Yи��n&#x1a;l��&#x5ed;��_ѝv?y���7�u��r��*M&#x16;�&#x15;&#x0;�y�?Z�x�Ĩݢ�t=�m���6��`��]��W�:q����yRb&#x1e;4�2Qh1�X�K|���M��s�&apos;g�&#x1f;(b�ߙ&#x15;}��x���[�hh4&quot;�v�CoF&#x17;x&#x19;&#x16;0`g�&#x1a;?�$K���&#xd;
�z�;J�PJ�s9|=t&#x2;�^�L&#x1e;}��Ğ��)a(��A��rb���&#x12;�k�k�&#x1d;&#x13;�ݻ�v��&#x1d;�5a�i�~��53y[&#x3;�&lt;���(@�&#x11;�&#x18;l&#x1b;���&#x10;+^B�T��]� �4��I�#ՅV�д��RU&#x1;&#x1e;�*&apos;Սy체&#x1a;7����p^N�&#x17;���Y�8��m`&#xd;
�lH�%����F��}&#x1;&#x4;`4�.&#x6;9پ&#x10;`�0	�&#x17;�3c&#x14;i�ݠ!&#xc;�Eڭ�l%�&#x3;MJ2�u��6M3�g�&#x19;&#x7;��4&#x7;�c~�A�G��om�,�&#x18;�@s�&#x14;�n&#x16;�/Б&#x1b;��O����7ä��&#x1e;8�#v@UY�&quot;&#x4;&#x1;j]���v��$�Y�t���b	�&#x14;&#xd;
�&#x16;1&#x7;pZ^��&#x5;�&#x2;j�.-&apos;&#x16;�{���s�Z[�&quot;�����&#xc;�&#xe;nu\c�����v�&#xf;&#x19;��7b[�&#xc;�&#x6;��Ī��VSOϹ��&#x6;��3�~b���O�3ޡ��Y���gЧ�P�-�&#x18;�&#xe;o&#x1;pު��� �&#x18;�9�M���\L�fÓS�{rr9&#x1c;�N�&#x17;�~&#xd;
����w?/�l&#x3;�&#x1d;(�6��&#x2;҃j.��6TYό&#x1;$��&#xc;K��&#x1a;�&#x14;��4�P֣&#x3;��`���&#x10;U�&#x11;��Ｊ&#x0;����&#x4;�q]�B&#x11;Zg�ڙ�&lt;&#x1;��&#x3;&#x12;&#x7;���Muo�k����&#x16;&#x2;&#x4;�]�C��}&#x18;F��my&#xb;Y˚E�{xq��B��-j��І�&#x7;�)i&#xe;t�uy��o&#x1f;�%�� ���&#x1b;��z�������&#x10;�&#x15;m��l.RN�&#xc;#&#x1f;;&#x7;e������:�m���H�&#x17;@��1�6&#x7;wL&#x12;]���Xtj�;�)�&#x11;��&#x8c;S?��&#x3;&apos;�NA�4)o&#xb;�&#x5;H����׆&#x0;���ڬY�&lt;� =I�&apos;z�@ܣ��l-��L���gYA�&#x7f;5x4x��&#xb;�z&#x19;�7#��c�![SpNY̳��A�O&#x1f;�&#x2;���!�no����*��[�虃� ���&#x19;M�?��&#x1f;��@灅��vSU_��R�=A&#xf;��%���&#x1d;�jZoO�&#x1f;�=`&#x1a;�&amp;���\&#x1b;&lt;�Cjo���&#x6;�&quot;`r��&#x2;DZ�#x&#x13;�M�RiZ&#x16;{�o�Q�&#xf;&#xc;&#x1f;o�&#xe;�B��t�&#x18;����&#x5;*�&#x7;�oeQ�?�&#x11;H&#x3;&#x7f;E�a�%���4oK�&#x6;�;&#x14;���\��&#x1f;Q�S_�R���}���&#x1c;&#x10;/�dA�Ab��&gt;��J�&#x10;Q�q�u&#xd;Jǘ^vu�ھ���&#x16;e��5�~�����dY�+&#x3;l����X&#x7;wG\���4�6-&#x16;���d��&#x1b;����&#x14;&#x8;�&#xd;
%��p�0�&#xe;ޕ`&#x11;�{Ј��6k�&#x13;݂�7�v��z�^ٺ�+�����&#x17;f&#xd;
�.�&#xc;�c���&#x14;feA���)��57�?�����v���E�_�&#x1b;@�����W����߷Q�8&quot;&#x3;�M���;�&#x1f;{&#x1b;3&gt;���&#xe;7��U�W`�w-�i��.�h&#x2;FwJK/�x&#x14;D^��h���v�M��)W6��&#x4;&#x13;&#x10;*&#x3;�S��Os�&#x11;A��͚��W&#x8;��M��!֥塐x� ����lZ������0o�&#xb;���&#x7;&#x16;&#x12;&apos;}��zYU=�&#x3;qA2V��ri�*&#x1a;����&#x1a;���_�m���~�գ&#x1;&#x16;-i�t�&#x12;p�k&#x7f;ڵ�=m0ϖR��&#x7;IȮ&#x1e;֠�����ˬq0�r�҉����&#x16;�&#x1;3t!�h��u���ʺ�YK� �.��sgR�&lt;r&#x0;ќ��u�&quot;�w�&#x1d;��8&#xd;
�u����v�D��\�ꟻߥ�����&apos;$�h�Yad&#x5;�̟�&#x17;&#x5;}�oT_6�ۺ��&#x19;���	�EN�,��ii��7,��k&#x5;y4&#x0;x&#x5;�Z��&#xe;G�&#x1c;b�1w8�&#xe;�&#x1b;�&#x1d;ЫA&gt;5�:0��v ��&#x14;�+��&#x5;�&#x1e;�.�{�	:��-1r�&#x4;&gt;1�}�&#x0;���ܳu�&#x12;l�&gt;]v�ٝ&#x6;&#x5;��=&apos;�M�v&#x14;�z���&#x16;o7j|�5Wu&#x7f;�2��\&#x15;gE��4&#x6;}�*�=-~�&#x16;�0�ܲ�f��7�ZY����q�&#x8;&#x3;�&#x11;�9HI]���}&#x7b7;ŰG��WDp��(m&#xc;�k&#x3;S(C&apos;�c&#x1b;�Pvy��xK&#x0;q&#x1d;�0&#x18;W:1�&lt;�e��&amp;o�H��{1�8�&#x5;Jɱi��W4&#x7f;��&#x18;1�e]���̖�&#x1f;����Rf&#xb;ğ�����C��4&#x12;&#x0;���&#x5;�±&#x17;&#x1;N&#x7f;�aL&#x1d;r�&#x16;P�ȁ⩃�0&quot;���;&quot;�&#xd;
w,�_ �]�g[K��&#x2;=�&#x3;���&#xc;S\�8;�;0&#x3;S_,V�&#xb;���ے	�&#x10;��GM$&#x7f;���&#x1e;/�&#x17;u�&#x15;�&#x1b;s ���B��o�ܒ�sq�&#x12;�1&#x12;}��h&#xd;ۚ�0�6��Z�*ՓL���ޘ�&#x2;_?&#x6;{#k�_��&#x1b;�.�U�5�*�&#x5;&amp;������ի����.~&gt;==��z}u2���&#x2;7�&#x16;.&#x15;��&#x19;Y�&#x6;n&#x3;*j@��ۖ��d@�f�&#xf;j��.%d�P��&#x1d;�0&#x7f;-�{���d��1a��2�1w�f��q�qB%��T�d��hChH|0�&#xd;1X��n��oI�����2Jc.���:MB��9w%���R&quot;��&lt;��N�:���&#x1;���tY6&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/dc8ad435-bc93-4b23-b7b2-8850e9a10e3f/third-party-modules/Firefox/89.0.2/release/20210622155641?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Fri, 09 Jul 2021 11:44:09 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/telemetry/bf10d3aa-869b-488a-8e32-79d214757465/health/Firefox/89.0.2/release/20210622155641?v=4-89" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
mQ�n� &#x10;�&#x17;��&#x2;&#x1b;��V���CsJ[��j&#xd;DF���$J&#x1a;�&#x7fb;$9�j/���&#x1d;f�&#xb;I�ْ�&#xc;&#x16;|&#x1a;Ȋ8�U���T&#x0;�QmOE���V%�[SrQ�Z(�\&#x1d;-$&#x17;�gHY�d%�����q�����&#x3;�G&#x1b;&#x17;$�N�&#x8;̳w�6H�&#xb;��&#x7;��N��EN��J�H&#x7f;p�l�C����R*��5���k&#x17;�&gt;�~ʓ�-XQ&quot;d�2{8���&#x1c;�dBD�%|9�&#x1;!d�}��?�Ӭ��Ի��O%�&#x1c;u^~�i�&#x1e;�h��Œ+&#xd;
��&#x7;0y����a�}���~&#x19;�`y&#x2;#\n�&#x1b;Gk\NrE&#x16;��&#x6;�o�\�}���&#xf;�&#x1e;k~�1흝�=��&#x1;YqC���Y�8�����=�J&#xb;E��ӡ&#xf;��&#x1;&#x0;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/bf10d3aa-869b-488a-8e32-79d214757465/health/Firefox/89.0.2/release/20210622155641?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Fri, 09 Jul 2021 11:44:09 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/submit/telemetry/a9840571-30c4-4688-b884-fdd938d45ea4/main/Firefox/89.0.2/release/20210622155641?v=4-90" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#xd;
�}�r�J��8|�n��6&#x1e;U�ݱ�� ����A�}z&amp;n&#x10;2&#x8;[�&#x18;q&#x5;��L�&#x7f;��ʔ&#x10;O&#x3;�[��;1�&#xd;������J��������/_�hr��2&#x1a;���u&#xc;ʹEE�&#x6;FŰ&#x1c;���8Fe4&#x1c;��34�00`� 	�y&#x14;O��&#x1c;� 5)*�]Ѭ�0�k򽴯�!�&#xe;#���&#xc;&#x6;^�7�]&#x6;��8&#x1a;�&#x1b;/���2H&#x6;��&lt;&#x1c;�&#x17;	&gt;�cU,|��&quot;&#x1a;&#xf;&#x1b;C~�fI)L�2&#x4;�4	^p�M����{��{�]I�4�f�q����/_��0N��]�G4&#x1e;&#x7;p	F�Gq�e��� ~�&gt;F&#x4;Z�2*/��&#x3;\�s0��c����0���&#x7f;&#x83;�&#x1f;�8&#x18;�&#x0;&amp;��Y�2&#x1d;�w0&#x2;&#x16;�&#x12;N�3�u&#x1e;σq/�u&#x8;K�.��&#x7;����X�&#x16;�p�:&lt;}0�$�(&#x1a;�h)&#x1d;��h&#x1e;&amp;|�&#x19;&#xf;��C�E7�1�i-	f��&#x10;�&#xd;
&#xb;�&#xe;���RZ��&#x11;�&#x4;����&#x6;&#x3;FQ2�w&#x0;&#x4;&#x0;ǰ͕+&#x12;.�.&gt;%�!���l&#x1e;&apos;ac&#x12;�`i���/�XS�63K؋���k8~��&#x8;�&#x0;hǵ��M@�}���m	+y&#x1c;&#x7;�/4�&#x7f;��)�MX{����5�&#x1f;ya��&#x19;~�l��p��8���I0�&#x7;�a&lt;�-G��&#x11;!�D&#x1a;�\}tzY_&#x5;%�̀��I0�o���&#x8d;�&#xd;kQ0��@,�&#x0;X�0&#x4;�&#xd;�|���?&#x2;���&#x1f;o�I4{V&#x8;�\�ѵ1&#x1;�H&#x16;Su��7=.��¤:�&#x7;�g��c	���Y�8&#xe;�a0��1&#xf;�?�f[��c�C&#x2;��&#x3;&#xd;�ZK��WV�&#x7f;�4-�rv&#xc;�?д&#x1c;�X&#x0;L�5�E�/8�a�h%�&#x0;n&#xb;��L�$D����l&#x10;��D]&#x1c;�/W�&#x18;�?���x֟&amp;Q&#xc;&#x13;���&gt;�}&#x18;1����L&#x14;��$�6&#xb;��p�&#x14;&lt;)&#x1;�z	���&quot;�Y���&#x11;�.p&gt;�u&lt;S�?&#x7;y�G��x1�&amp;O��b6U\�&#x12;�(�	��q�&#x18;&#xc;���&#x1;i�&apos;�&#x10;9&#x1d;Dx&#x1c;�`���&#x8;9j�L&#xf;��C�&#x11;�&#x1e;��М�&#x7f;_L.P&#x1f;^&#x8;&#x1b;d&#x7;&#x8;u��w�&#x15;*�!&lt;&apos;E��0�&#x4;�Li&#x12;�&#x10;�|SL�bF�1&#xe;f�x&#x18;��p�Of�@�겵X��1�E�ם��Hײ&#x13;&#x1d;��[&#x1e;&#x1d;k�0�&#x3;��&#x11;�,t&#x1c;&#x7f;#&#x6;ر��$��E؇��Λ&#x1d;A���.�[[oVf��H�&#xc;���V&#x10;�&#x14;N�D�K5��\&#x13;X���&#x6;&#x7;�/��ܰ6S&#x7f;&#x2;�&#xe;.&#x4;�!��+pc�%&#x1e;�)&#x4;�p&#x2;�f�h[�WG��&#x12;�ZZJ�&#x1c;l�K8O~\�����`��&quot;&#x19;?&#x6;�o�#L&#x1c;O���=�&#x17;`)M�T_�q&lt;�]!�&#x7f;C!�&#x6;`aYp��M��K&#xc;*&#x13;�����&#x13;t���a0��~���`��&#x1e;���f`T~&#x1b;�`&#x5;&#x0;2g�q1P�7�]�6ý�&#x7;|����V�Wa��&#x5;&#x7f;�&#x1c;&quot;�@S��`1&#x6;��,�s��Et&#x15;���2�WSpp&#x0;�&#x13;`�&gt;���1&gt;&#x2;�{B��&#xf;�s�8����$�a`�&#x4;o�!&#x15;&#x12;��&#xb;ؑ&#x17;�A���|�Ώ��&#x18; �c&#x1c;$���ϕy��4&#x6;�&#x1e;�&#x1f;��7B�̈́��i����W0&#x1b;��)�5PD��&#xe;�a&#x1f;p�Pn�tz&#x7;&#x1f;+3^�!�M���&#x1a;��L+���O����e&#x7;&#x19;�Q�Y��	�J4�.�ǌ��&#x15;H�7����&#x4;&#x7;P�[�|&#x1;����&lt;��0�&#x1;�PH���/�8���o�5RF�Oj�Ϣ�&#x12;��mK�&#x17;&#xd;��?��,P1�%&#xc;oϟ��&#x13;&#x7f;�	��&quot;�g=�R����E	S�s���k�fӫ����]��~�z�{��&#xb;��&lt;�S&#x13;�yvs�\~��&#x17;T�&#x12;Ln�bs��&#x1f;���&#x7f;�&#x1;�r0^��E��&#x10;����%Pق?:|&#x3;x&#xd;&#x10;/�l&amp;�&#x1;ej����M��!A&#x15;p?܀�&#x1;�&quot;&#xc;%��V����&amp;&#xd;�͠o����0DC&#xc;|�����&#x16;���ܿ*C�6�T4���&#x15;&#x1f;g��!�ջ@8X=~e��_��&quot;�&#x2;Vi9j�#Лzw�Z��t�쉰4�{�����C��,~�.&#x1c;�;ݦ�&#x19;��&#x6;���&#x1e;`�_&#x18;g�R}w\�&#x1e;&#xc;&#x1;&#x13;-B�&#x14;����&#xf;^&#xf;�ٗG�Ӳ��G�܉LM&#x12;&#x1b;��&#xd;����K&#x17;&#x11;��D$&#x0;n�n]!&#x5;�:�w�:�I8&#x10;�&#x13;�&#x4;�!&#x4;H��+�+�H�.�t�U#u�QJaP�I9LW#&#xd;x���jj9VK��&#x4;&lt;	Ӷ���N�&#x18;a�c�CV&#x13;�&#x1c;M�C2ǥ�3&#x14;��z&#xc;b?�Fd?�َ�Ng.��]���`�ҙ�&#x4;3���%�f�N��T��Ѣ*&#x1c;�ZGٺ�Q��&#x8;U�&#x1f;A�&#x7;	�H1I�,�&#x13;�4��e�cxյT&#x8;�|%	˒&#x18;J���1��A�&#x1b;�c�%�&#x8;`��k�&quot;�y�&#x15;��~�w��&#x7ff;?&#x16;E�.t&#x8;�V�dn��Ј��.y&#x15;&#x4;���a2�[&#xe;��X�W��+�n���m�1,%&gt;&#x15;�I۱H�Lɨ0&#x10;&#xb;�r��5�&#x4;[&#x8;�|&#x10;�2�u�V���;4\8�!	��ul&#x12;^W��L�R�L�a&#x19;&#x6;���,�!u���;&amp;3�p,�&#x8;HhA�����[�|����W-�ì)�5mŚ��LK1&amp;�E;odDfd��&#x4;I�&#xd;
�&#xf;^���F�&#x15;��3��	�,1&#x7;��&#x15;9�y��.�&#x16;���6��=@hk0lx&#x12;�i&#x8;&#x5;C:!�V����O�O�f�[�&#x1d;�ÈL����W&amp;F������&#x19;&quot;�3,&#x12;Z�H�� ~v�&quot;��zFiTd=&#x18;� K#�Y�:&#x1a;w^���=x^�&#x7f;$�t��V�0�I;f1�aD9�JM��&#x1a;&#x14;=Sz�h$6�SC�L��&#x7;}c�t3��5�N6U��T�)D���&quot;�Ts�y&#x13;$��k�[�ڒ�w��z�ݭ�k6j�&#x7f;�&#x4;�4�5?e&#x13;�&#x1a;9�ʚ&quot;&#x0;�P�d�$��9k�l&quot;� �ڄQ�&#x18;��hKF��&#x13;�w#���&#x8;�Rc��S��&#x1d;9v�ҏt�5Q癤@H��bE&#xf;\(�I����&#x13;��ε`g��I�a*&#x12;�u���K1T(&apos;�?&#xe;���s&#xd;&#x5;I&#x1e;1&#xe;��A&#x7f;�V&#x1b;1g��a�ץ!�&#x1d;�%&#x13;��r��$�&#x13;w�2�s&#x1a;��&#xd;e���@����&lt;&#x7f;&#xb;�)��T�B���A��e&#x11;�&#x12;���p`(&#x1c;�9V��&#x8;З!��&quot;&#x13;c�喑��&#x1b;r+�I�I�V`J�	*b��f�hd��l&#x11;4�&#x1f;f�&#x1b;��=Pεv&#xb;&#x14;v&#xf;\�&#xf;^�ٮ֕�&#x1e;�:&#x17;�&#x7f;&#x1e;w0V���5S�a��1&#x18;b�!�c&quot;V��`&#x5;d2�F��xe6G�&#xe;��.3�k�l�&#x1d;F�0&#x19;&#x17;:?J�&#x1c;h	��&gt;)&#x1c;�%&#x1d;1���0&#x1d;�;8|ӅF��-�U��L�M�&#x8;��芭i����:��z��7|��ہ��1�j&lt;��X�&#x6;뙶_�!&amp;a�bǟ8+�֩�`�&quot;y&#x1;��&#xe;&#x7f;���x�9a&#x1;r5�ڄ�Ls�����l&#x1d;&#xd;
F�0���k���j���V?&#x1e;&#xb;��&quot;�&#xf;4�=�T)�����k8C�&#x14;t�`�4-c&#x13;�Z&#x7;���z��:%r&#x7f;&#x15;�&amp;C*O�Կ�~&#x1b;�&#xd;�y��i�J��+��Y$�ce&#x4;���	~������E��u�]�o�����j�M��&#x14;�����7�&#xc;�����ԍV���&gt;���z~��򏏗]ׁ��uO�Ƈ�ݴ���&amp;&#x19;`C��ْ����&#x1d;B&#x3;��&#xd;
�&#xe;��Q�S�&#xc;�T�;���t�34&#x2;EA�(T&#xd;&#x17;�o�0��R�dJ�6&#x1b; )4�]o&#x3;+��(�&#x1a;;�&amp;��1/��G��&#xb;)-�Z&#x7;Ή�ԙ%8��~BW]�X�=	��@%�2&#x1c;hl)�ap�&#x3;�&#x7;&amp;�_*��p���$��&amp;9�4ɡ���&#x7;��&#x1c;���y�)[kW��_���X&#x1a;&#x1b;&#x10;�&#x1b;�$��χI�&#x14;Y&#x18;�&#x10;�]�e1��b 95k&#x11;�� &#xd;
�&#xd;
}(X&#xe;�gm�3#�&#x1d;#�e-�s�*�58a�L���5U~W�&#x5;�!�*&#x15;��Q*&#x1d;��p^J��HW)]��Tp���H��B�ծ&#xd;
{�4w%�ܨJ@#qM����CE\=%��RX&#x1a;��b�&#x1c;�H�+R��&#x15;��U�&#x1e;h�N��&#x1f;��z�kU��^}���&amp;M�m��ܢ-Ґ��p��ۿiw����^���l&quot;O�7���r��ʂb!W��9u�&#xd;
n�L�l&#x7f;h�����&#x1b;��ys^wϴ+z��p��S�Z1�(����&#x1d;|��uP����&#x3;&#x11;l�Ė܋aK.Q��]ߴՔ&#xf;�̇�Wo��~��=2&#x2;�4�^!���̂Di�&#xe;�&#x13;T��w�&#xd;��&#x4;Wɐ��^I�J�&#x2;^pY&#xd;�RI�&#x15;��x�t-��P�+&#x1d;&#xe;�l&#xe;H�j \.[&#x4;�c2��27�&#xd;
i^5M�:l�-�L$�V&#x5;&#x7;�&#xe;���U��U&#x15;�N&#x15;&#x14;�����:��k�]�i&#x12;Z&#x11;����M�nV[&#x1f;&#x19;�۴���D3�&#x6;Z�&#x10;�&#x0;��&#x1a;a�LcōR&#x1a;L*��Y&#x15;Z��H�u�1�I��&#xe;�#�؄�0!8/&#x3;ʜ=^�a��`Hb*&#x1f;�=!]�&#x16;��&#xd;
�c�&#x1c;�p�W7u���� E�&lt;�&#x14;�7���KC����&#x8;&#x5;�&#x11;��&#xd;
F&#x15;n�%n�&#x5;Һd�.��KO�%�uY&#x1b;�Q�&quot;s��3_�.&#x7;����&#x0;G�4��&#x19;v��&#xc;�v�ƛ���PToߩ0���p&#x2;^�W]�O&quot;&#x8;J�p&#x2;�L�򼜤����đ&lt;�&#x4;vE��yW��f&#x16;7�p];�&#x4;ˡP8V&#x18;��&#x1a;��&amp;&#x14;m��&#x11;�E��I&#xb;��&#x12;�z�b��&lt;&#x15;�&#x19;���rT�(���2t&#x18;g[i(�o�&gt;p�&#x5ed;�,�)&#x14;pMi지M|�X^A�&#x4;��Do&amp;�L3]Ks�LJN�8\4:&#xd;
�&#xd;
�&quot;Ŷ�b[l`�H����4᱆v�&quot;�(�&#x8;��FL�Su��&apos;&#x10;B��h���K�&#xb;����&#x12;�&amp;��%&apos;[��&#x7;�r7��&#xd;�݃Q3Ũ�&quot;��#��&#x5f5;�&#x16;�y��A�k(s��_&#x8;ew���;E�u�&#xd;
�~D&#x19;&amp;W�_A�&amp;B2�&lt;&#x1e;3�n�R̘�K�ri)&#x18;=U&#x1a;&#x11;c�&#x7f;I��&amp;��J]��&#xe;��&#x1c;ǉ�e;��&#xd;
{!&lt;��&#x13;T8D��:�i�wՓI�ۆ��&#xd;N�KV0\�ঁ=&amp;w��f~���k��_�4��]ݎ͎&#x5fd;Y+�&#x1c;�JK�}&#x1d;&#x7;s^��v,s��VW���L�i佶-*|�&quot;o���S&#x1e;:�����^s�u���]4W���&#xd;
&#x7f;�&#x12;h36v&#x1b;��&#x13;sS���&#xd;2ŗ��k��ZC�&#x16;��4�0]M��L�3��b_�Mղ���^�Y��0t�&#x8;�kL��*&#x1f;�d2�p�&#x1c;3���&#xc;\��W[�����&#x52a;��u��Qe8P��D&#x1d;�&#x1c;�~_E�f��P���EzZ-̺L�J&#x7;q�^R2�[&#x18;廬�nY���T��NM&#xf;N�JR4&lt;x���Y��ϕ�F�߹&#x16;v��_�	�ژ�&#x1b;.kY�j�\m&#x16;N�I�7�j�&#x16;��w���JH����$�|K&#xd;
�V&#x5;��R�7ջF�����JL&#x7f;ؒ9���N&#x5;���kZ&#x1b;��&#x1;;�}Z�kV[&#x1f;:Ȅ�&#x0;C{&#x5;&#xd;
D_������/�&#x14;X�,s&#x1a;��&amp;&#x15;�B;a�\b�&amp;&#x15;}p�:]��WP&#x1d;�&#x1f;�&#x7;&#x15; ��O�q�/�k��~�|&#x19;G����&#x1a;��y�_4E��_1&#x17;��&apos;�S�����68&#x1;*���V&#x7f;:}&#x1e;}9O�k�m&#x0;}\&#x1b;6�6���r�&#xd;
&#x17;.��/�]�&gt;w�y]���o7����Y&#x5;��Z{�K=&#x0;Ts�=}�����!��צ&#x7f;�v[E���h��&#xf;�v�ڻiw�F&#xb;��f�&#x3;�g�W(&lt;�j�&#x6;�Y$&#x8;u�S�浻&#xd;�_y��k��}�+&#x14;��6\&#x7f;��&#xd;
F��U��ۂAh�&#x17;\�&#x5;�_$Uz���m��&#x17;)2�}l�Hl�x�[�+&#x12;1&#x4;��=�O�&#x1a;,�&apos;�D-&#x7f;F�8�,&#x1e;M50��l���}�W��ӄ�ɖ&#x3;��&lt;|��&#x6;��&#x1c;&#x0;��&#x1c;&#xc;�&#x1f;�G�#�:&#x18;|&#x19;&#x5;�P&#x1d;&#x4;&#x12;��$�Ӑ��Cc�h&#x7;�&#x14;&apos;�0���q0��%&#x0;�&#x1f;���?�&#x4;���&#x1d;�&#x18;�&#x10;Hj�T&#x1d;&#xe;&#x10;&#xd;O��&#x19;��6&#xe;��p�&#x0;��Iu��Ŭx�&#x2;�,^@�-J���QB&#x7;I�&#x0;&#x12;uf�ip��&#x0;8T{�p܌��o��&#x19;%&#x19;�y�c��&amp;��8&#xe;Nd�3��&#xd;x&#x8;��Ǹxe��&lt;�x&#x1a;H�&#x1c;��Ԣя7yOgtY��$�N��K�4j?�&#x13;��&amp;:&#x11;&apos;�!R|&#x10;&#x1c;_�d4��U&apos;���D[xFQ����&#x1c;&#xf;Og:��=&#x1f;�:�,*��톳���%&#x7f;��_B&#x14;�A	�~/x&#x1c;���G�(^����s&#x15;&#xf;&#x15;�*&#x8;I=&#x1c;�t0��%�6&amp;&apos;��s�&#xd;
��&#x13;&#x8;�N�A�&#xc;MO&#x1d;����&#x15;�;�b�\}�OwFX�ga⫃]&#xb;&#x7;�D��&#x3;&#x1e;&#x4;�O�A��C�&#xc;�����&#x1;���p0��)&#x4;���&#x4;�icʧp�aه$�V&#xd;
@�gP�ś&#x1f;r\�@��q�r�ӭ&#x1f;�)�8ݿ&#x17;ϲ&#xc;���!&#x1;�Z&#x6;]O���x&gt;�_�&#x10;Ο3�� ���r�S�D/t�~xrN지S�t�&#x12;�&#x5;&#x1f;�\&#x1a;�&#x1a;s&gt;��&#x1c;)�&#xc;�V�R&quot;��&lt;�,&amp;��&apos;,o=%0���&#x7f;9=�vF=�&#x1;U&#x1b;G&apos;&amp;&#x3;~&#xd;
8���x_p	O;���21Q��:��8[�q&#x13;�&#x13;���&#x0;Q7���LB柜�;�o����Y�3״��ᩑι+���Z�Td9g�&#x7f;��NE�9˓�&#xb;��]����Ytb5㜐&#x0;&#x7f;�&#x4;/Ѹ&#x4;�l������&#x8;H3��ˣѰ�r����YA�Q5�&#x7;3&#x14;κ�0�MCzoP�.&#x2;e����9H�&#x12;��Kx��h&#x16;&#x16;&#x1f;�&#x11;@&#xf;�p�\p�&#xd;�&lt;i~�pyB`J&#x2b68;�W�����dj	P&apos;��aR�,�&#x12;�s�&#x2;Ά�O��h&#x10;��Pj&gt;g-*&#x1a;�k�򺢵&#xe;���b�K�&#xf;&#x1;�w|&quot;U&#xe;&#x1;B&#x1e;&#x4;&#x4;ق&#x13;�p&#xf;&#x1;�=X���_�TLyZ&#xf;���C	�y��%�|&#x1;��x/�u&#x19;��^�d�[H���|���&#xf;&quot;M4)&#xb;�D�r0�&#x1b;�8#aڋ�&#x18;b��&#x1b;B�s�m&#x6;C|�)�p&#xb;�C14�pT&#x1a;�tK!C&#xc;L/.�[�&#x17;��!�&#x4;&#x11;2M��Q��&#x16;�s�JM�&#x13;Q&amp;�&#x10;� ͺ�0Z&#x14;&#x7ff;�&#x7;K��Tp&#x1;�J�+��\�*�	;�v�&#x11;�� ��$&#x18;!`J��r�t��d�~�&#x1d;3o&#x8;Xθ&#x19;�&#x4;��5�^��IF�L&#x10;�0�	&#x1e;��e&#x2;&#x8;��$�d&#x1c;]&quot;�z�^��q�D&#x19;(E&#xd;C��&#x15;M��)^(O�[&#xe;�!o&#x19;J&#x2;L)�6&#x4;J�X�&#xd;��&#x19;�)Oa?�&#x14;&#x17;&#xe;Jֿ^8$����Y��N��;�VŸ&#x4;&#xd;
&#x5;{�J&#x1;ħ ��&#x12;l��Z�&#xd;
�&#xd;
���7#r&#x15;�ptpb�p&#x1d;���7&apos;��3��&#x16;&#xe;���&#xe;�&#x13;�!|�&#x12;�ϱ&#xb;�lE�u�N�0&gt;3H��[&#x7;�TMn����)��`�k��&#x1a;L��o�&#x6;W��S�AW�=��4-Ͷ�u�J��;�,N�&#x13;��#&#xe;۩�F&gt;&#xd;�^�&#x1e;qz�� ����X��&#x1d;ػ�Hoi&#x15;&#x15;�xY��^�G�&#xe;�a&#xd;P6�ʳ&#x11;��y���3�&#xe;�ğ~&gt;�9���&#xf;���y�&#x14;o`&#x1;�7&#x1e;��S8�&#x1c;�&#x0;rJt&#x6;&#x1c;a�D&#x0;&#x1;zޚ��9�O92�k.bI�Q��_�x�\&#x6;	c�&#x5;����y\�&quot;�?=�T�3�t;�&gt;&#x3;;&#x17;���&#x8;��&#x12;�A�{&#x12;M��5&#x1;&#x0;ח�G8�M&#x1f;�&#x6;._��^&#xc;����t&#x13;�}o&amp;3��&#xc;�&#x2;�t&#x14;(�^�k),��q�&#x7f;��_��ۭF&#x1d;&#x1f;4�&#xe;���(�&gt;�&#x7f;&#x5;�~&#x10;N�l�A��	��7���&quot;{&#x0;q�՜z�՜b۫9q9�A0&#xe;&#x12;u�&#x1c;L�K8O~\&#xd;#��&#xc;���|�&#x6;�&#x3;&#x15;��&#x14;D�&#x6;&#x7;���e1&#xe;���G&#x1e;6���&#x7;��x�&#xf;�aݸ2�&#x18;?[&#x1b;�&#x14;&#x8;&#x10;�}�&apos;���&#x15;f�}�5���¨v�&#x7f;W��ߩ�4l�=&#x4;�r%&lt;&#x15;�(dq!��[&#x18;�[,������J�8��gh,�&#x1f;j[_�&#xf;.S8��������&#x18;&#x8;�S�&lt;e�&#x1b;�4&#x5;&#x12;Bf�h�%�t�i/Ἶ�&#x7f;����}y&#x1c;����&quot;��ˬF&#x12;?&#x1b;�bw3���z&apos;�\&#x14;�:]�S�n&#x7f;��^xס]�7���T�&#xd;
Cݏ�n�����GN(\kuc��TD�&quot;,�:-���&#x17;۰`db����T��E�Ih��&#xf;�M��&#x16;���+�~�V?�@P��DJ�&#x17;��?�N��U?&#x1e;M&#x11;��	ME�&#x1c;����w��n[�&lt;b�M&#x6;0V����}�������Wz&#x1e;��D�SC[���Y&#x1d;���m�Tr�:s-Ez&#x17;&#x7f;S&quot;�&#x13;\�n�k���y���|iJw�&#x2;.�&#x6;*��&#x14;&#x1a;�;L�f	&#x16;c&#x14;gc+,�F��f&#x5;��kjl���$&amp;���	(T&#x15;&amp;��;ŋ����H�h�&#x528;$!]u&#x11;�9��&#x1b;th&gt;y-�߲콎�&#x10;&#x1b;oOߠ��;?E��&#xe;qz&#x7;&lt;�&#x18;�Qc&#x8;M�@&#x15;v��t&#x5;�]���N��C�&#xb;^a�z���&#x7;9��6Q��Ks��M������u��u۟&#xf;��H&#x11;u석j&#x3;�E�|�R��&#x12;˹&#x14;��ڰ�;�`����~��j�p�&#x3;� �&apos;�+�-s70&#xc;Q�7�n&#x16;�����?�A�@�2&#x7f;�s�&#x1;��^��+&#x3; ^�~&#x2;&#x18;�&#x19;���4�T���)�����&#x13;�p6&#x0;~%����mmO��W1[���R����$x�&#x6;���7��&apos;�;��D&#xc;5b&#x18;���x�A2xp���K4���ߦI�5�&#x17;��&#x2;�P���4]l	Ho��G�{ݮ�)�Q�&#x1b;���&#x15;&#xb;��S����s�+]�A�$��&quot;�@��b&#x1a;�F&#x4;�mB�dLG&#x5;\:����m���K�u���ٶ)&quot;�5��&#x18;�$;o���+�4�RS�����&#x6;h��&#xd;�tl]n�p&#x1b;·�K��Ð�&#x11;�[�K��4�M4M�|&#x11;�p�rG���&lt;&#x12;ö(&#x6;�M��&#x19;&quot;5XŃ���R�1=�p�f��b�8&#xc;c}4�&#x2;&#x1f;��&#xd;
&#x16;]|s&#x1c;�&#x10;�Hķ*���m��A&#x13;�&#x1;0?�jH\,���/b&#x16;cW�&apos;��&#x11;&#x18;R�T��c��m2��ËD�I�&#xb;M~&#x19;{�RX�� �J[�&#x4;����7t{�r�C�s&#x12;��47B��,�c��&quot;4��Ϣ��&#x14;�I�&#x13;&#x18;f&#x1;��0tE&gt;�BT#�L�%�&#x19;&#x6;�O7S�Y�`�i���� �ْ�g�:�O&quot;�&#x15;��&#x7;D&#x14;�����&#x15;�,��-�z�&#x11; �p&#x1c;R�p�z� �I�ȇs!�&#x4;&#x13;&#x10;sEHA��$Ԙ�6��a&#x1a;&quot;o�&#x1c;ԸrICS�&quot;���h&#x8;&#x7f;m�Ա��}&#x6;#�r����&#x10;�&#x17;[��GF&quot;R�׃�&#xd;&#x15;��V�&#x16;:9���}D���&#x17;�x^�&#x8;&#x1b;�&#x3;B9FՄ�&#x7;�&#x1d;&#x14;p&#xc;9&#x15;�T��8\&#x10;�&#x10;+��.�=�j+������w�7�f��&#x0;^���~&#xd;°�oC��&#x1d;a��&#x6;�;&#xb;v�)S��&#x1d;�0�*&#x7;1�^&#x5;b&#x0;s��&#x1;�$&#xc;�6a&#x0;��&#xd;
�%c�a&#x4;(�b��u�G��\aBgL�_G�K����5�&#xd;
�&#x7f;���z,~�&#xb;�z&#x1d;E{�%K��&#xd;&#x14;mw\�j�H��R&#x2;��ϜS��h���D�rw�f��Y,Ct�P&apos;9�N&#x4;�`&#x1d;U$&#xd;Q�=�&#x1f;�&#x18;&#xe;�&#x11;s6�����������F�4I&amp;M&#xd;
o-�4�$�.�hmi&#x15;)&#xd;
��G&#xc;�&#x18;&#x7;Z�u_��l&#x1b;u&gt;r���2��5�jumҬ&#xe;&amp;�1�#&#x8;ߦK�k�uD��)&#x1f;�6�]&quot;�t��&#x1a;U&quot;�*;�&#x18;�Q��&#x1a;��&#xd;�رH��:aڒ�Pu6��&#x15;�H͡$�Z�OY�Z�ZI�T.�aj�RM��z���V�N�I�&#x10;�c��1�&#xd;
�]&#x12;z�	� nt&#x18;)61��y&quot;��Y�-.&apos;�q��Iԃ&#xd;
	.��4&#x19;�&#x16;�&#x3;4��&#x2;&#x13;�z�Q��t�k�f�t�h�~&#x4;�!�^&#xb;��&#x90;n�&#x52a;6��&#x12;܇�!�#��:�ч1P��vrl2k��q$&#x8;��.{����H�&#xb;�$)&#x0;�h&amp;&#xc;�|&#x18;a!�(s�&amp;S�C��&#xb;��D�#X�gy�M��?��[�&#x3;���&#xc;���F.a㼳�Ք� &#x3;���Y&#x17;p�&#x6;-��d4-2�V%8�4�C��ÉQ�u�f ��5P�[�ɷP(&#x4;�d[��h&#x8;,僢b7\�]&#x1;]U&#x4;�[�)b*��L*¡)7&#x6;	l3}-&#x14;2D�r�5�&#x12;-&#x15;&#xd;
%����҄&#x8;&#x11;�a�&#x588;&#x2;,�*Q&#x18;�Z��ȄK�a�Td&#x15;�kՕ&#x19;s؞�l�u\�R��^ķ�&lt;&#x1c;&#x14;u\�k���`G�S&#xc;*��j�(&#xb;j��5ph	�Z&apos;^q�&#x1b;�&#x74c;2��44&amp;�A�D&gt;B(���5�r&#xc;�&#x15;��+T&#x1f;h�h{&#xd;E9�&amp;��p(22pq�)5b&#x8;��D��2&#xb;?�y0�#�&#x1f;&#xc;��4y,�&#x7;&#x7f;��-L��&amp;+1�����y�X{Y\=�p&#x1;J&#x1;�&amp;4�ؘ&#x16;kF��!?���/�&#x19;X[�մ%�e�a��&quot;&#xf;ʶ�&gt;�&#x7f;�i~[yX�&#xe;&#x1;|h�n���&#xf;��Q��Mm#����&amp;=���&#x1a;�d�2�I�82�I�tV��Mc&quot;%&#x16;��&#x12;H&#x3;Z, ������t��\�՟�u�&#x7f;���Oy�J�Y������3��_��D��d�䐑-��)��������;&#x1b;��&#x11;��q&#x7f;�[K�T���o��^&#x15;�/=&#x8;&#x2;n��-&lt;{ΊB�ۮa���س�D�kپ&#xd;ώk��r�h��t&gt;��ިD�%��6^r�Uyä�Mr&#x12;0���o��&#x1b;if�#��6��x���t�&#x13;���Jr�s�u��8na7�zC#�&#x0;=�J�ǚ&#x6;�&#x4;&#x5;�;&#x4;G��&#x5;y�)�&amp;C��t�{�����R����n�&#xc;��&#x11;l�nxr���8q�t��J�&#x12;֗\4t(�&quot;(�&quot;�b�PŎ����&#x1a;DL�c{��b&amp;����/��1�z&#x5;�&#x1;�|_Ia��譋�Q&amp;�&#x8;�r&#x13;/ ��E�7�T[��*7k&#x1d;�&#x0;�m�v�&#x1e;&#x6;N�L]!�&#x3;%J?�a�`/KpZC�GȥM��I#[�$�rV[G������d��j+�:�)JH�5���&amp;&#x17;-&#x3;&#x18;mg*��XF]�k�3�����\&#x1e;��6�ثU�m�0iL*S;��&#x1c;b|��&#x5;%&#x1c;&#x4;����2&#xe;�T&#x3;G��W���8S���F��\ʖf&#x1d;՜�qs���&#x1c;��9&#x8;�j�Q����&#x1c;��Co&#x11;�sۡp&#x5;&#x1c;q�^��2�H2&#xb;�&apos;�r*&#x5;&#x15;&#xf;&#x1c;��&#x2;&lt;��,��p.�&#x11;�	�	�:�M�j&#x16;K�e��e�/�N�d�wu�dN&#x15;���&#x14;vz&#xf;���b�2Faɗ�).q���&#x14;�&#x1;�b&#x14;{��\��I�G�켙7�(sn�2g��&#x11;ɠ&#x1c;�Y;��f���y�&#x13;�&quot;�d3k�M�&#x10;�!��&#x10;/�D&#x10;N&#x10;��0w-a��emv��%�4V%t�mɥZ&#x7;%�2�i�&#x5;�m&amp;gd�R��![&#x16;�I�L�+�$fi&apos;T�vW��:cG����ד�&#x1b;&lt;j�I&#xd;��E^&lt;��&#x16;&#xd;X�pw&#x11;�Ť�?͠#��KC$y&#x1b;*��u6��謵��ERp���q�R�h�	s�3C��\�̯љv&#x6;���&#x1c;���e&#xb;�&#x8;�L�c�P&apos;&#x15;�g]�y&#x11;��&#x15;�����3�N&#x19;�&#x17;&#x17;,�e��&#x1b;��l��.!�R@�}`�1��d�&#x15;E&#xe;f�����]�]�L�.ץ��w��m���b&#x13;9�9&#xb;-V���#m����:���]�Z�w�.6�49��ۛ%�&#xd;I��V�e��b)��i#]�&#x1c;��?���&#x5;�&#x0;r��$�u�c&#x15;�U����ժz�j˯�N������A�p��&#x3;,���X�dH�@��&#x19;7|�V�&#x13;�]�宍0�ڌ~��&#x3;�w�&#x1;����{�;۬���|#_i�&#x11;�&#x15;��X�r���^���ܯW{�~��Ц�����n��b���y&#xd;gi�&#x1;���j���V?z�O^���_�N̮���}F���e��J�g7�������&#x16;}h�[h�u����R���Ze�@�6��&#x0;	�R����&#x16;���{&#x4;�͘�֜�8&#x6;i&#x1c;�4)�&#x12;�&#x16;&#x2;.1�&#x1;�Ԑ�&#x16;����Lqpݑ�&#x7;z����r�RNaqφ�&#xf;��r	)H��&#x18;t��&#x15;&#x14;=K�&#xd;
*QJ�&#xf;��&#x5;7)�S�&#x590;�&#x5;�!����&#xc;�^�rZX�f&#x1;&#x12;�fd�&#xc;��u&#xe;�t��r�YU���N��E&#xe;l��&#x0;������2�&#x1b;0&#x1a;$�&#xf;��N�fa�&#x10;Hg�t�1��04�]�t&#xf;��&#x19;&#x7f;��&#x5;z�ə	�49i�m&#x6;&#x1a;&#x11;�ҹ�٢u:6{�n�ܥ&#xb;&#x16;F&#x1a;ո)����f���gJ&amp;��&#x15;&#x5;�,�@&#x1;@1�C�&#x1b;,�VaߣI��{�\�,nn��ߩ&#x7f;~�1��{�-$176:�E�&#x18;���ݥpZyۘʌ�7&#x3;5PP-�ٯ7|��t�~t!Rݣ ��Q�&#x5;tI�s��)oVO[ʜ\��&#x2;\�E���}���&#x11;�CS����U�&#xd;+4.�T9O�ڠn�&gt;&#x2;%&#x1;����&#x1f;�5����Qޡ&#x1e;Ekݑ&#x13;˄&#x52a;{f�P���nOu&#x10;o&#xb;2�&#x3;&#xd;��&apos;�_o��f��&#x11;&#x16;&#x7f;��n��-l��OL)�=|�9*�N&#x13;�F�D`b����&#x1c;߮����4o���4ʲ�&#xe;4���3�H&#x13;�yD�����d(ma&#x18;��))����	&quot;&#xb;�&#x4;�J���j9.����ew&#xf;�RM��r�Ԧ�*�l�r��.�p�&#x1a;9�\Z&#x1a;u�,z�a�o��}�ud�T��&#x11;#X[Ҷ@A&#xe;&#x1a;�gFn&#x3;���Q-є�xݬ�&gt;6&#x1b;~oW&#x14;�-W����a��tQ	&gt;;&#x17;&#x5;���G��2뱑�ߡ~s�0�j�+�T�&#x1b;D�V��&#x3;l4���mK��	8��&gt;�͐ä&#x4;�aj��i&#x7;;�4&#x0;&#xb;}��־���,B�6&#x1c;c9�}�YkV�&#xf;�i��9m�-���E���t�����&#x4;n�Fu�SZ��&#x2;�O��d�&#x16;&#x8;k;��ߡ�����+�Y�&apos;��&lt;��&#x2;�&#x1d;�*�1����f�Vm�k&#x1f;�L�Uu�m�3RͰ4�Y=u&#x15;�O͎&#x7ff;i4)f?&#x1e;[��(��C�&#xf;���x�}�f#e�D���g�&#x17;�&#x3;�]�B�-&#x10;��m���v�r���i�m�5��&#x12;Ǚ� ӽ�&#x1c;+rO�&#xd;
�&#x4;7~�&#x2;&#x16;|��JJ����}g�N��c�o�е�&#x17;�&#x1;�����}���8����`i(A���ؖ{����]��2h�&#xd;����gɼ��;b\�s�&#x1c;Z�W&quot;��b���}��,EZ�����V�&#x7;2z&#x10;Όm&lt;��/Qv�T�C�W�M&apos;܆�}�&#x1b;[_/�l��wWr��� �&#x7;�&amp;�o�&#x2;U��&#x3;��	m{�`&#x1f;d����9�,&#x17;�f��v����&#xe;�;WN&#x2;Q&#x1a;b?�\d�&#x1;�-���A�&#x3;a�K�Z�w� z��}�&#x1;&#x6;���kw&#x1b;&#x1f;&#x1a;�}��B��-��5 �&#x7;&#x18;���0H0��}&#xc;�&#x7b3;+�V��J���,�7�/�Ƒ@m4Q���	.%��������D�K�[ӊY%&#x13;���&#x4;�1�I&#x1;���ZP1&#x12;ἓI*��|��eQFZ�K�&#xd;a���4�6�T�q,-l��;�5uyW��$�6ɻ������H{tL��=&#x12;6��\��#]&#xe;�t-&#x378;�%&#x7f;]fUK���ѹ��q�vC��+V&#xd;
�e1�Y&#x11;�����x�.؍&#xe;���;D&#x0;O�t_/��&#x16;g�uU�æaC#7ג.9N����f�&#x16;�&#x2;&#x18;�s��&#x1d;��&#x1a;��I&#x1f;&#x8;&#x1d;U&#x15;&#x11;���ki��5�{&#x1b;9U5�2���6�f7���&#x0;&#xd;
;q�w\m�4�&#x17;&#x7;�&lt;���m���&#xe;��T�[&#x19;9�&#x15;(�@���Cu�8ܥ�u�(�N[�&#xd;�&#x12;�&#x1a;v&#xc;n�QM ؠ�z@&#xc;�P4+&#xd;��&#xf;��]&#x11;����&#x10;�&gt;���զ�&#x5fc;�{��&amp;;���&#x1d;�C��)F&apos;�h�L]��m&#xe;�6&#x14;��&#x1d;AJ�U&#x1e;�7�&#x1a;��T&gt;Oڂ(k8��Cu�	���L�K&#x1;��&#x11;j��&#x1a;��&#x3;5��s�&#x8;A�!�nU���2��Qc�m����;&#x18;\��V0qU��J͐�iTE^Uq�(Q�s�&#xe;��H�k�&quot;���u�&amp;/�Qp=��ݾ�aK*����~�U�~��&quot;;&#x7;f=�yeZ��m�E���V�����&#x1d; e,ú��S&quot;�H��&#x1c;��\�&#x1d;z���v���ݮ�&gt;�&#x7;h����� �ғ��&amp;E�6綕2㤮�ڗK�+��ҍ�&#xf;W�&gt;��m,��z���N���&#x7;9&#x1d;W��n:&#x17;�{�����x- Ԏ��&#x1e;�^���M��zw�V&#x3;&#x1b;�&#x7f;��Bo���&#x4;؁���&#xb;&#x16;���~��&apos;I�\����	�&#x5f5;���&#x7f;r��b�H�UL��&#x15;��&#xb;���&#x1e;��&#x7f;$�fw�F��&#xb;ZN���sUj��ү��7k)t�e;�I��vS�Ŵ��L��^���Tm6��&#xf;��#�۹�E&#x7;�{�&#x17;ອ򘹫~A96�&#x12;�&#x16;U�-=ף���4Z-u�P��Y�&#xf;pm�Fկ��2gu�X۷�,�&#x1b;�U���vXz^.&#x13;q&#x1a;@b�e]&#x1b;&#x0;&#x19;&#x4;в���@	�n&#x13;#�]�&#x12;o�vj�nj&#x1a;~�yZ7�[���#���Ю}ܭ�ޢ�����u?wz�F�&#x17;���Vk&#x1f;��:�v�O��o&#x1b;^s��?P�&#x1a;{g�&lt;�}���T�&#x6;�g&#x15;2om�;��W�Ϩ�~&#x2;��&lt;t��\���k�iF@�]&#x7;E��S)&#x2;*N&#x1f;U�]-�m&#x16;{)&#x15;!䲀AS�B���&#x8;�&lt;�.罦�&#x1e;=��o�X��v�߄���?�䦹wr3ױ����&#x2;A�nV[&#x1f;���&#xf;�26&#x1d;��&#xc;&apos;��x�&#xd;
�Ð&#x1e;P$�&#x3;QR�(%�(��o�&#xd;
�m��A沅���&#xd;&apos;odz�&#x1;�g�@K��&#x1e;�)&#x14;�sئ�i&#x12;�5Sk��Y_�Z��&#x5;�W_Ic&#x1d;�&#x14;�ʳAI���Z�&#x1;��Z�҈\&#xb;=��Ak㘅�ҫ��ִu,����ǆ���w?�(g	E����&#xf;�\��|9&#x1b;�:�2&#xf;h��&#xe;�{&#x1f;�Xv&#xc;��N��&#x2;Ez���%&#x16;{�sd-�I�z���1�ϯ��&#x1b;Bn���mVc�&#x6;_&#x13;&amp;�Y�?�sF&#x7;!�zM���v�����4�&#xf;&apos;�5� m�S�fG!&lt;j��Ţ�b�� �E.{9�/]7�_�M�&#xf;�	:�&apos;-�=`~���&#xb;Y�z{��S&#x1f;�&#xd;
����ਜ਼�&#xf;&apos;��m���&#x1f;���/��އh�kz�c]�&#x3;8����@A��&#x15;!v{�����0���^�v��V��(��p�bM\oߩ���(��^�rN&#x8;~����&#x7f;W�w&#x1a;�{�&#x2430;&#xd;�_���F&#xb;��ݺ�n�]O&#x1d;C�lr���5W&#x6;K�ڪy� �&lt;�&#x5fd;O��&#x7;�9��rP�נ��{����@�x���+&#x10;)�W��n&#xb;��Ii,܉�(J����[��*f~�`?6z$&#x1e;��&quot;t�U�&#x0;�ݓ���������&#x11;&#x18;�0&#x16;�����z5u�&#x13;�~��4&amp;�h&#x12;��z4���*�y&#x1e;���kÃ��ߪ��iR�&apos;���ג&#x1f;��&lt;&#x10;��1r�&gt;`i&#x1f;&#xc;Hc&#x1e;���n��b�&#x0;9&#x1a;&#x1f;�!ѫ�3|�&#x0;�&#xf;ǣ2�C�Q$wly�����_&gt;c�h&#x7;�&#x13;&apos;�0���q0��&#x5;��7&#xc;��O�p&#x1c;���6�]/��&#xf;��&#x16;L�&#x18;D?&#x1a;�@�3��6&#xe;��P�x�[E��&#x19;yH��!&#x0;��&#x5;lݢp����x��D�q)&#x10;�&#x0;9&#x1a;&#x1f;g&#x3;�&#x1e;%����[�&#x4;8��&#x2;���p&#x1c;�&#xb;�&#x10;�b&#x1e;dUn����p�*,E�Z��!	�%@�&#x2;�Hi�&#x19;��	�����&#x6;b8&#x7f;�c\�7�P&lt;���s�&amp;6&#x7;���@�&lt;(�o�&#x4;Oa7�@�P���&#x6;Lq����&#x15;�F?ʑ&#x1;Y&#x3;�Ș��	�$&#xc;�&#x14;*Ô0Sq&#x7f;���CR&#x1c;��	Ĩx^]&#x1;�P�����&amp;&#x1e;,��֭�R&#x1c;Fڏ�&#x4;��&amp;:�*���b�� &#x18;���h&#x1c;&#x7f;�N&#x6;��	ɇ3�?:q&#x4;�4���&amp;&#xd;
�UX�W��&#x0;�&#x1f;&#x8;�,*A&#x4;��Qd��&#xd;g�&#x1f;a��` �&#xc;&#x1c;�y&#x12;&#x7f;	��&#xf;N&#xd;
a�&apos;�KH�	&#x12;S�.�&#x5;��&#x19;��&#x17;�FT����&#xc;^�&#x12;�&quot;&#x5;&#x16;����8Q�#�D���&#x4;?��&#xc;�&#x10;�%�Z��H�����Y�Q��&#x14;+?�b�\=1OuF8�&apos;� &#x1e;���0*�K�&#x14;�_�_��1��E�c	H�nY��\,&gt;�T�&gt;&#x1f;&gt;&#x1e;��y�O�A��Y&#xe;�B�&#x11;&apos;��2&#x7f;o�u�^0E&#x18;�&quot;�Q�N�&#x0;�U8w�&#x0;)&#x12;&#x1f;w�&#x1f;�p&#x14;,���`f+H��;,+w&#x17;�&#x14;F�&#xd;
B&#x1b;&#x14;��6�&#x10;E&quot;&#xe;+��`)0a�&#xd;T��&#xf;X7����&#xd;
&#x7;�&#x7f;���K���% EF/��F`��a) �		�d��&#xb;J��K)�˿&#x17;L�%&#x1c;E&#x1a;�&#x14;��%���b��&amp;�v6\�j�Έ	�&#xb;�������f�3&#x1a;&#x17;���=�� �������&#x2;U��%�z�x�U&apos;ыJ����6��&#xc;P�Ѝ�3�YP&#x2;�&#x1c;�4�2�&#xf;����&#x4;�Z�KI��&#x7;&gt;���f1)�&#x7f;p��S&#x2;3&#xe;��y0x~9����62�j��&#x16;�5`&#xd;
��&#x19;(�[�4�!hʁ�v&#x12;=�R��)�v&#x13;&#x14;&#x1d;&#x18;l�����C&#x1a;?O���Pa&#x1b;De�O7��Aѕ�&#xd;p�!�~�-2k�&#x14;&#x1f;\a=�&#x1a;���\&gt;&#x7;��[����(�.j&#x7f;_�&#x1b;�Niy&lt;c�&#x7f;9��O�b?�&#x1e;�E2+�!&#x8;�B�GE�y	j&#x1c;��,:����P&#x0;S�&#x4;/Ѹ�&#x14;a&#xe;�&quot;U�ڪU�i��(&#x12;&#x17;�p&gt;/�Q����2l]�&#x1;R�Yo�&#x14;*%ڃ&#x19;&#xd;
GI&#x1e;��&#xb;���~�w�x&#x1a;&amp;�(,z��V��˧w�d6Ŕ��&#x13;(u�z�?&#x8;&#xd;
/u&#x10;&#xc;&#x5;��&#x7;I&lt;&#x1e;?&#x6;I&#x19;&lt;�5`�.�׃�s�$&#x5;WY��ģ�,,��@�&lt;D��s��!�_O��%h��@)�&#x14;# �H8�&#x0;)&#x14;&#x1f;��!z[9�l�f	&#xc;��b�&amp;[�����y14&#xe;�E��%&#x1c;�Y�O蟁_P��e��&#x14;�b&#x1f;�ǵg|V�&#x16;&#x10;;��&#x10;��X�=&#x1f;&#x0;o8&#x12;� �&lt;�i�&#x4;Iu&#xe;&#x1;�9�!*�o&amp; &#xd;
7����&#x4;��&#xf;I4�/ST�tj\���6���/Y��&#xc;�&#x13;k�&#x14;��&lt;�&#x10;[&#x2;&#xf;�č�g-�&#x1;�~(�����{)ҭK8&#xd;
��&#x15;|�Ȼpd��&#x0;8s��&#x1b;&#xd;&#xb;n�{&#x13;w��&#xd;:�9�Xɼ�&amp;�&#x10;�&#xc;�BE5��BTS0�&#xd;�NG��D�D&lt;�QBڋ9nhhS&#x16;���0+�&#x14;z�U0&#x1c;B,M�a�&gt;�j&#x5;�&quot;y�!�-0�dX&#xe;�,�)�t�&#x7;Em&#xe;*&#x13;n&#x8;�±�&#xc;G��E&#xc;G�DC|v@zq��&apos;r�&#x14;� K&#x1a;�T���M�k&#x1b;���4�&#x0;��݇(�e����S=�s���M�e�&#xd;
I&#x15;ҩ&#x1b;&#xc;�&#x8f;��&#x1;TY����!*&#xf;U�&#x2;�.&#x19;;�BT&#xd;
&#xc;����@*&#x16;G%��J&#x10;N5&amp;&#x10;�%�Z&#x3;�8�&quot;&#x7;H&#x19;&#x2;�&#xd;p&#xd;
���&#x14;?&#x19;���&#x1b;&#x7;���&#x5;�S4�&#x1e;ǃ/�3�&#x1a;0&#x5;�S`	H&#x19;&#x18;v&#x3;��1S&#x6;u�&#x2;J�&#x15;	&#x5;HY��:4E�Jy��&amp;&lt;E�$���&#x19;�Q|�l	G��8��z&gt;�(�&#x12;E� w&#xc;M	6��CS|&lt;Lv�&#x14;�ـ�x�b?&#x15;���C-&#xb;0 ���&#xc;�B&#xf;��&#xd;
y&#x19;��&#x2;J�e�L�&#x15;�%K@�a�J�Ү-&#x0;&#x15;�r� @yH��HyNX=�]���Hy���w�e&amp;�&#x14;�(G�B�pޙ-&#x5;aNͯ�&#x14;��&#xc;�)G�|&#xd;��{FJ��b�4R �&#xe;�Z&#x15;&gt;;Nʰ�+&#xf;I��y�Q&#x12;��Q&#x7f;�A&#x12;��&#x18;��r���&#x0;E�&#x1a;��&#x14;�2�����%��Ql��S�^tW&#x1d;�tp�9�v&#x17;��&#x0;�&#xf;&#x0;&lt;&#x1c;�&#x4;��&#x15;�&#xf;&#x8;�� ���_m�m#.A��p;�`&#x1c;&#x7f;@�!&gt;�yD�]9¥�&#x1d;&#x12;$E&#x17;���]&#xd;
�0(&#x5;z]��.Gn�&#xc;[�ʱA�&#xc;��ʠ6V@)|CW)&#x14;�*,��&#x4;O��9)L:��E;&#x7f;&apos;�y�&#x7;��6tPH	��a@&#xd;
&lt;@&amp;�&gt;���8)C��&#x6;L�J�!|�&#x12;������m&#x1b;[&#x7;����&#xc;N�N�\&#x7;�4�D�&#x3;v�a�g&#x6;�&lt;/�[��&#x14;�B\��D��[��D�j\�c)ް�&#xe;T�o �)��NL&#x13;��&quot;&#xe;�%ˌ6@;&#xd;��C&#x11;^�q���ގ�A�)�E�����0�&#x1b;Ao&gt;�R&#x1c;Rv&#x11;����&#x7f;T��0��&#xd;��&lt;�&#x2;�-/1;7,���錼�g&#x10;?$���x�\w�&#x7;e&#x12;Oܳs�c&quot;�?�C�?�&gt;�yɭ��&#x2;H����&#x1f;��&#x4;�&#x0;+%&#x1;&#x6;�����q^N�r�]&#x9fe1;�|v=��&#x1e;{���sђĄ&#xd;
�����&#x1c;�6|��&apos;��Ⱦ�d�&#x1c;�r��9)&#x13;�OP0&#x8;�j&apos;ф��:��b���!��%�&#x11;&#xe;o�ǩ�-����~���z�~&#x5eb;7�^����~�ֻS&#x0;=����&amp;d��&#x4;�d�V�ej�	]�F@�~��k�y}�U�ٿ����m��&#x5ff;i�&#x1a;��W�&#x7f;�&gt;ÿן�&#x1f;����4�Mp��m£e&#x19;lM���oi�&#x15;��$��*]*&#xc;&#x15;�&#x8;��= PX��V�&#x10;��{&#x1b;���7�QT���T��:}3�&#xd;Ҥo&#x16;eb�)ҡ���A��&#xf;%ku����Ǧ?���&#x10;�v��&#x18;t�I��4�i�7G��&#x8;2ˠo��c�2m&#x2;ɡ�&#x1d;���5����4�K�&#x8;à��&#x8;��]Rғ&#xd;��GK���uǖ�D-}�4�ɺE�0%�cY&#x1a;��T�:�c&#x1c;Iu�&#xb;�~��$$�E8&#x13;�`&#x1a;���!A���J��_�&#x8; mN�;Lyƞ.	�:�D�q&amp;/�d�[&lt;^�&#x17;��H�&#x3;&#x11;]&#xd;
&#x3;ߥi&quot;�&#x1d;�&#x3;ױ��8@д�]��&#x19;���i�L,tIx2h}�&#x1b;$�O.��MO�W&#x12;&#x1e;&#xc;��Z$&#x1b;�c)iRx��&#x17;���2�I�q�d�&#x12;)W�&#x7;a�&#x15;�2I&#xd;�@aZ&#x16;�r&#x12;O�#&#x11;i�WX	&#x5;L�&#x4;�і�!�?H�)M[&#x3;5���z���F��n��;&#x1f;�պR��h&#x16;&lt;��a+��,�&#x1c;�}�p��&#xd;
X�Ɓ�1�&#xe;�&quot;�ᶔ�R&#x10;&#x1e;b�������B�	�$\MM�ċ&#xe;&amp;&#x13;�RS��5�ʆֽ��7����&#x10;9&#xe;��,&#x1c;nB%�-`�m6Ih�F)g�&#x18;&#x16;&amp;R�����^&#x7ff;��&lt;��񓸏fQ?2u��&#x7f;��49{�;9�]o��f���g&#x17;5�K�G4&#x1e;&#x7;W���p4&#xe;��2�̮&#x6;��q$s\c&#xf;�H?��&#x19;.�^&#xd;
�}�YkV}�q��@-����z��)��7?���8ܢ�����v�%D��Bn&#x8;�#��������Z�d���vp&#x19;ʮw׆?�&#x17;�u���~��p�\a1}��Г�X���1&#x1;���i�o��Խ{_�].*�]`������&#x7f;�&#x2;��k�7�8d&#x12;����+���&apos;���@|Z�&#x1b;��\��B�t+4�&amp;�#��恙$�GZ��,�O@��z&#xd;&#x6;�n��N*r��B&#x13;��}�ۋ&#x19;�@�4�I�l�g�&apos;?�U�&#x7f;]��q���&#xb;&#xf;Y�&#x1b;&#x1e;���N&#xf;c#&#x16;a��=��Cƾo��BM��gc�i��`8�&apos;�&#xd;
\�_F*	}d&#x1c;&apos;��&#x11;&#x1b;�%�p&gt;�&amp;O��@�voVy�&apos;�&lt;�P��&#x17;M&lt;�1&#x19;�̩`�����b��.��&amp;�*`�&#x18;��V��&#x1d;&#x3;����W��k4��d�E��x&#xd;
�5���`�&#x18;���c�j���kU�8�bW^�4�;��&#x16;O��c^�&#x15;�nl��%&#x17;&#x1e;,�~�&#xc;�=&#x18;���/�&#xd;�{��{��j��n��UWI&#x14;p�����������V���JB`��,&#xc;��se&#x18;���x&gt;�k�Ams�ľ��|%�2H�����&#x6;4��|&amp;W�&#x7;4��&#x10;�_���&#x1b;&amp;�0�l9&#x1c;�&#x19;)�&#x7f;���4�&gt;�8���f���k�^ϻ�(���c�9�̩8z�o|L&#x1b;[&#x1a;E���&#x1b;��~�Um~�&#x1b;&gt;�	�x2�և#&#x15;&#x1;8��u��&#x12;&#x1c;��fG�y�p�&#x5;@��S&amp;�^��t&#xe;&#xe;L�$&#x2;�/?9����l(Ǯ������[��0�&#x1e;&#xe;��&#x15;q5��q4�&#x12;��!�&apos;��O���,]��i��&#x382;�1�X�&apos;,ӆx�t��� ��Q�u&#x1e;��&#x1f;?cZS[Ϋ;�&#x6;A�-�d&#x16;&gt;�L�h&gt;&#x7;A&#xd;g?ebk9�t&#x1c;&#xc;~�,9�����&#x0;܆�:�:�����~V&amp;+L^��,�I&#x0;X9l�&#x7f;	_�����N�k�Z&#x1e;r&#x13;�lQ7~&#xd;�䦁)РT�I8�)sɂ�W(�$����9R��0&#xd;
OH����c�&#xd;
UeY�,H&#x17;�nn�o�c0��&#x10;�?&#x5;��&#x18;�_�����P�ɋzL�Sx^,�#i�QLn.��/��8��C�x�&#x1;����&#x18;?�&#x1f;U&#x15;��_���t�z�q���$&#x1c;����/|��&#x17;���&#x7f;qG�0p]s(����&#xc;��&#x11;�tG��@&#xb;�Pӆ�3x&#xc;u�i&#x1e;��&#x7f;����0:�P.a�x1�^D�a&#x3;¨�b&lt;�`S��&#x17;.&#x1f;&#x5;La�A�&#x1a;&#xd;
�b&#xc;�Z�q��5������&#x8;�&#xd;
��1&#x7f;��Ԝ�t&#x1e;+z�&#x1b;&#x15;�1G&#x15;Ws̊.\=���(&#x4;�{9����q,�&#xc;m�2�F���&#x18;&gt;V&#x1e;&#x1d;cT	G�e&#xe;��6�����&#x13;��&#x10;�r��P8���[�&#x12;��zŵLC�VhX�X&#x1;W�5����@M��q�o�(4+C�j�&#x7;�;�R����&#x15;��	��������`&amp;Wf9�&#x1e;��&#x19;N����6&#xb;��?)���,&#x0;�2 ���t8��F����7C&#x3;F&#x1f;��8��1�z�\�W�k�W s[�.�%&#x17;v��W&#x0;һa�\I��8^�s�&#x3;S��(M�b�8&#x1b;�&#xd;&#x10;0@��&#xd;�0�̞�	�w�U&#x3;@��t�`���&#xd;
�x7�&#x6;�E&#x12;F&#x13;��e&#x12;���P�?�/�#�;ʇ�&#xf;����&#x1;��K4&#xd;�Q�{�c4y����n8����T�m&#x1c;��W�)]&apos;0u1�&#xc;&#x7;�b&#x4;��&lt;��Yq́k&gt;&#x6;�&#x1a;@T��2�|��x�&#x12;��)&#x10;O�&#x0;�x&#x1c;&#xd;�1&#x1f;&#x1f;��p�h�6�+&#x3;�&#x5;&#x15;�&#x2;9q&#x1f;��&quot;�@&#xf;�еu��&#x13;&#x1e;��&#x11;�c��7&#x11;x&#x1c;�w�&#xd;���&lt;&#x3;���U�PF&#x1e;S��8&#x16;�M&#xd;
Ӵ&#xc;&#x1;?}�HXi-&#x7;	)ե�0&#x6;I���&#x4;�������is0��&#x1d;�g�Oߧ�&#x11;�ǈ �[F�e�u&#x0;?,�C����5��X��|?O&#x16;!Zb&#x10;�	&#xd;
�*+Γ�q�&quot;��Y�j6#���n&#x19;�kٸT{&#xe; �&#x1e;�ݍ&#x18;&#x5;&#x11;��&#x7f;���c6&#xf;Uނ��kp�4�&#x1;&#x1;E�`|&#x17;|�k�Ha�ش1�.p|�JBc���d&#xe;�&#x1f;��&quot;��&#xd;�F�KtN_��&#xf;U|x��&#x8;��Ӳa��T�&quot;Ae�� &#x18;&lt;�&#x1f;���&#x6;&#x3;�z�]��ØM�pxw�&#x7;���}&#x2;�&#x1;�&#x1a;)u���`vw�;�&#x5;&#x1f;|��&gt;�쓞~�}��}���O�g&#x1f;�K�&#x7f;���g&#x14;����x�&#x19;d&#x8;�L��#&#x16;&#x10;,�����h�.v�m�&amp;��&#xf;&#x10;&#x1a;`�S��&#x9e;&#x2;4&#x4;\&#x18;ǃ&#x0;9&#x6;&#x4;�r�+-��{&#x1f;v�������bm�b4�����B�&#x16;/��&#x1a;�&#x1a;���h L	�y&#x1e;R.2�&#x4;�&#xf;*`*�\�E&#x3;&#x10;�&#xb;!4�¯��&#x17;��&#x1f;�W=�;���$&quot;���K߯_����s=.Ǣo~&#x1a;&lt;�i�&#x1d;�U�uo�&#xd;
�)e�&#xf;	����5�wp�&#x3;�6&gt;�K���6&#xc;�c�p��G�x&#x6;&#x3;=@�p&#x18;&#xe;&#x1b;&#x13;�T�0�=&#x12;ـ`&#x18;L)��&#xf;&#x10;�&#x10;lM4��ԥ&#x12;����&#x1f;&#x17;���&#xf;I0}�&#x6;�&#xb;Kj��������&#x1c;Զ�&#x10;���LWXl�&#x7f;��&#xd;jZ�&#xe;\�V�&#x14;S&#xc;��+2�e�4\�&#xc;�&#x17;˸��B��ۖ�2��F�r9b�g�&gt;^��|b%�ڈ��&#x1c;.�+	�&#x14;|&#x8;�rDv&#x13;�&#x1a;nŬ�&lt;��?t�j�&#xb;+��@ݡ�&#x17;�B2��OTO�H�K��pLdc&#x2;/&#x1c;�rz��[�B���0���g��Ga�&#x6;eF��e���*U&#x6;6?�&#x15;&#x1;�@\���&apos;.��&#x1a;�/Н	25�,6]t�x��cטo��@�F���&amp;v&#xc;����Z&#xe;�ݣ�x4�&#x16;$��1�&#x14;\��&#x5;.&amp;&#xb;l��q/���Oig��&#x1b;�ڻ�z��j��&#x7f;�&#xd;�z���&#x14;&#xf;��&#x10;;&amp;�i@&#x3;�&#xd;��&#x0;�4��9hz ��&#x1c;P݊$3+�!&#x2;��0�܅�&#x15;-�&#x1c;�?��&#x8;�P��	U�&#xd;
&amp;�{Q�Pƥ��߆&gt;X�/��M0&#x1e;�����&#x0;Ɓsp�l���K�&#x18;�&#xd;
�&#x6;&#x6;&#x2;�eM&#x7f;q�^C3&#x12;�&#x1e;�oؠ�KT߫ݻ�R���RC\SO��f[.݁�&#x19;1&#xb;&quot;K;&#x8;�rǳ�&#x19;n���Γ&#x1f;�?l� ���&#x14;&#x1d;�&apos;D����&#x1a;��Cc&#x10;&#x17;)���8�n�L�}�/I�&#x4; &#x7;c����O&#x1c;@�0oB��&#x8;��K�&#x10;M^�&#x12;��&#x17;��T&#xd;ZA&#x1d;&#x6;&#x7;���d&#x1c;&#x7;��]&#x3;�O&#x14;&#x0;�&#xe;�&#x8;��j�&#x1c;��W��&#xc;��ɟ��_2�e#�Ϧ���o]n��-&#x1a;&gt;��&#x8;|ݯ���&#x19;O!xk&#x1;�&#x13;OF��&#x15;&#x1a;Uv&#x1f;�&#x17;0���&#x7;M���8�r&#x5;&amp;���+&#xc;��G&#x4;��u�l6^&#x1f;��sb�&#xd;
84�Vy�&#x7f;�&#xc;��&#xb;E)&#x19;@kcq�3(�&#xd;
^H���j&#x5;����d�&#x18;+�&#x1b;B���9�Tf�f�&#x15;�b��q��&#x0;J&#x13;�&#x5;b�9&#x15;�T�XS�&#x17;�&lt;�!��&#x18;?�� E0��i�&#x8;&#x1;&lt;(zBb��4�3���&amp;�&#x1;&#x1b;�ͽ�r�;&#x7f;&#x1f;��1x&#x3;��F&#x18;&#x1a;A�QwE�&#x10;zXq�GY�u+&#x18;�#�x��,���1�^�=�&#x5;&quot;:�ؠ�&#xd;
&#x13; :��x&#x1;Q1��o߮(,TEF��&#x0;�&#xe;���E)6&lt;��]�mOG�H��&#x15;�y��&#x8;�-����X&#x19;^n&#x1d;&#x2;FY5N�&lt;t&#x2;������#��&#x0;�А�h�\&#xf;� ������nF�����A&#xd;��1W$�iɅ�J�}��K0���/���KA��&#x1e;���k�o���/�\u?�&#x1f;�mΊ�&#x4;x&#x1c;�R�3�ʔ���21&#x1;�_qi5���T�u5O��	�!�2i��&#x19;�\Ug�3&#xb;W�ذ�&#xe;�pL�S���n��&quot;��^v&#xf;��&#xb;*�)�G*&#x10;ih��$�[�4o2�/�ɐ&gt;��z�Mv��ז�&#x12;�l��R6�n\&#x3;t�36iP�����U��|�	�q�Fsd�G�&#xc;�&#x10;&#xe;Y&#x1b;`В���5�e+�P)����`�~I�T��&#xc;2����&#x5;�S&#x17;���1�&#x8;.8&#xb;q&#x1;lX&#x1;�b�&#x1c;�/f��T%`�kx�+���/��E=�}w&#x1;&#x1a;�b&#x12;&#x7f;��&apos;�&#x1f;&#x17;�wl0�&#x8;��&#x17;����b�$&quot;������ś�Ǘ&#xf;&apos;��h��N�n��2p%�&#x17;9uK�x���z&#xd;
@g.I�&#x1b;���,):/{&#x1;�Ѡ������EnE&#x17;#�i��a^�1�&#x1a;�&#x5;�&#x1a;&#x2;~&#x12;�u��qr���&#x0;�5��WX����3&#xb;�Q�&apos;ޣ�Tʸ�&#x14;�O���_@$8O&#xb;8&#x17;��{&#x8;&#x4;&#x2;���.&#x6;yw,G&#x0;�ۊ�v�ٍ�+&lt;N��~=1ֳ��uPiIr�&#x1b;�&#x17;��&#xb;����*Ѥ�&#x1f;�TI&#x7f;k�&#x7f;�u��M������d���Q�}Qj&#xd;
qx&#x11;��3�!^��&#x17;c�&#x12;�]���&#x18;OÁ��\��/B�7����&#x19;&#xd;9&#x1;�&quot;�.�&#xd;����&#x5ca;�B�ץ�_͡�.���o�&#x0;���!~(��&#xd;
&#x3;x�W���&#xb;J&#x4;\p�C�:�8s�&#x1a;�. xZ�&#x1f;�&#x8;��Ρ�&#x8;~A&#x0;&#x1e;�����%�&#x19;gQ=�&#x1a;sr����&#xf;w��&#x2;�@�&#x17;O/�&#xd;
���gi&#x19;�*ɹ&#x12;ʒ�Z���� �{5!&lt;&#x15;�&#xd;�&#xb;&#x1;{�&#x15;�m0\&#x13;.�JhWRj�)�FnXƴj&#x11;);,�OI0&#xc;�Q0���&#x1c;&#xf;���q�T��&#x10;&gt;��I��U�Qa8A��%-H���v�ku��&amp;���o��}&#xc;p&#x1f;&#x17;O&#x15;a��!�46�̀D3 �2���Y&#x4;�g��Q�8FEm��&#x1;J$ʁ���d�C�&lt;����Im�&#xc;�G�b�RV�ǁ^y&#x1c;&#x8;&#x7;�&gt;p�������&#x0;�5&#x1d;&#x18;&quot;&#x3;F�\����&#x4;ͩ8�&#x19; &#x13;��p�`T	�&#x3;�b&#x4;#��`�C0Ԝ�=z�e8�t��&#xf;�&#x4;��&#xb;&#x2;&#x0;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">incoming.telemetry.mozilla.org</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/submit/telemetry/a9840571-30c4-4688-b884-fdd938d45ea4/main/Firefox/89.0.2/release/20210622155641?v=4</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Date" elementType="Header">
                  <stringProp name="Header.name">Date</stringProp>
                  <stringProp name="Header.value">Fri, 09 Jul 2021 11:44:09 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Content-Encoding" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
            <stringProp name="RunTime.seconds">120</stringProp>
          </RunTime>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CreatenewBond" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/Alert/get-alert-61" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/Alert/get-alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/clientmanagement/getstates?countryId=1-64" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/clientmanagement/getstates?countryId=1</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/clientinformationbyclientid/UUWGKGjZiXM0HrHFNcDeUw%253D%253D-63" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/clientinformationbyclientid/Yvx9k1CgJHTAM8JAZFCQog%253D%253D</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getsignature-65" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getsignature</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/clientinformationbyclientid/UUWGKGjZiXM0HrHFNcDeUw%253D%253D-67" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/clientinformationbyclientid/Yvx9k1CgJHTAM8JAZFCQog%253D%253D</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/clientmanagement/getstates-66" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="countryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">countryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/clientmanagement/getstates</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getsignature-68" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getsignature</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getbondrequester/UUWGKGjZiXM0HrHFNcDeUw%253D%253D-69" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getbondrequester/Yvx9k1CgJHTAM8JAZFCQog%253D%253D</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getbondrequester/UUWGKGjZiXM0HrHFNcDeUw%253D%253D-70" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getbondrequester/Yvx9k1CgJHTAM8JAZFCQog%253D%253D</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SelectCTBBond" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getactivitycode?bondTypeId=1-71" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getactivitycode?bondTypeId=1</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">3000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/Alert/get-alert-72" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/Alert/get-alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getactivitycode?bondTypeId=1-73" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getactivitycode?bondTypeId=1</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getactivitycode-74" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="bondTypeId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">bondTypeId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getactivitycode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getactivitycode-75" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="bondTypeId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">bondTypeId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getactivitycode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="EnterIRSNoAndSearch" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="filename">D:/ATG_Project/apache-jmeter-5.3/bin/Scripts/EPIC/IRSNumbers.csv</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="variableNames">IRSNumber</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getentrycode/1?bondTypeId=1-77" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getentrycode/1?bondTypeId=1</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getentrycode/1?bondTypeId=1-76" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getentrycode/1?bondTypeId=1</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getunderwriting/1/0?bondCategoryId=1-78" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getunderwriting/1/0?bondCategoryId=1</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getentrycode/1-80" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="bondTypeId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">bondTypeId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getentrycode/1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getentrycode/1-79" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="bondTypeId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">bondTypeId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getentrycode/1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getunderwriting/1/0-81" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="bondCategoryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">bondCategoryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getunderwriting/1/0</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/PrincipalManagement/searchprincipal/26-112555400/1-82" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/PrincipalManagement/searchprincipal/${IRSNumber}/1</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/PrincipalManagement/searchprincipal/26-112555400/1-83" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/PrincipalManagement/searchprincipal/${IRSNumber}/1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PrincipalID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PrincipalID</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;principalId&quot;:(.+?),&quot;principalTypeId&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PrincipalID Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PrincipalTypeID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PrincipalTypeID</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;principalTypeId&quot;:(.+?),&quot;principalNumber&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PrincipalTypeID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PrincipalNumber" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PrincipalNumber</stringProp>
                  <stringProp name="RegexExtractor.regex">principalNumber&quot;:&quot;(.+?)&quot;,&quot;principalName&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PrincipalNumberNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PrincipalName" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PrincipalName</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;principalName&quot;:&quot;(.+?)&quot;,&quot;physicalStreet1&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PrincipalName Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PhysicalStreetOne" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PhysicalStreetOne</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;physicalStreet1&quot;:&quot;(.+?)&quot;,&quot;physicalStreet2&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PhysicalStreetOneNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PhysicalStreetTwo" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PhysicalStreetTwo</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;physicalStreet2&quot;:&quot;(.+?)&quot;,&quot;physicalCity&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PhysicalStreetTwo Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PhysicalCity" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PhysicalCity</stringProp>
                  <stringProp name="RegexExtractor.regex">physicalCity&quot;:&quot;(.+?)&quot;,&quot;physicalPostalCode&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PhysicalCity Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PhysicalPostalCode" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PhysicalPostalCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;physicalPostalCode&quot;:&quot;(.+?)&quot;,&quot;physicalCountryId&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PhysicalPostalCode</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PhysicalCountryId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PhysicalCountryId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;physicalCountryId&quot;:(.+?),&quot;physicalStateId&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PhysicalCountryId Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PhysicalStateId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PhysicalStateId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;physicalStateId&quot;:(.+?),&quot;physicalCountry&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PhysicalStateId Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PhysicalCountry" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PhysicalCountry</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;physicalCountry&quot;:&quot;(.+?)&quot;,&quot;physicalState&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PhysicalCountry Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PhysicalState" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PhysicalState</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;physicalState&quot;:&quot;(.+?)&quot;,&quot;principalNumberTypeId&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PhysicalState Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PrincipalNumberTypeId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PrincipalNumberTypeId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;principalNumberTypeId&quot;:(.+?),&quot;onHold&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PrincipalNumberTypeId</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - OnHold" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">OnHold</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;onHold&quot;:(.+?),&quot;onWatchlist&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">OnHold Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - OnWatchlist" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">OnWatchlist</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;onWatchlist&quot;:(.+),&quot;manualAddress&quot;:</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">OnWatchlist Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="Sample.scope">variable</stringProp>
                  <stringProp name="Scope.variable"></stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - ManualAddress" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ManualAddress</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;manualAddress&quot;:&quot;(.+?)&quot;,&quot;resultCode&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">ManualAddressNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - ResultCode" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ResultCode</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;resultCode&quot;:(.+?),&quot;principalAdditionCategoryId&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">ResultCodeNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PrincipalAdditionCategoryId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PrincipalAdditionCategoryId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;principalAdditionCategoryId&quot;:(.+?),&quot;isUpdatedFromQuestaweb&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PrincipalAdditionCategoryId</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - UpdatedFromQuestaweb" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">UpdatedFromQuestaweb</stringProp>
                  <stringProp name="RegexExtractor.regex">isUpdatedFromQuestaweb&quot;:(.+?),&quot;encryptedPrincipalId&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">UpdatedFromQuestawebNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - EncryptedPrincipalId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">EncryptedPrincipalId</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;encryptedPrincipalId&quot;:&quot;(.+?)&quot;,&quot;isGiaOnFile&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">EncryptedPrincipalId</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - GiaOnFile" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">GiaOnFile</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;isGiaOnFile&quot;:(.+?),&quot;isCollateralOnFile&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">GiaOnFileNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - CollateralOnFile" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">CollateralOnFile</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;isCollateralOnFile&quot;:(.+?),&quot;divakadba&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">CollateralOnFileNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - Divakadba" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">Divakadba</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;divakadba&quot;:(.+?),&quot;divakadbaName&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">divakadbaNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - DivakadbaName" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">DivakadbaName</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;divakadbaName&quot;:(.+?)},&quot;previousBondDto&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">DivakadbaNameNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - PreviousBondDto" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PreviousBondDto</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;previousBondDto&quot;:(.+?)}}</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">PreviousBondDNotFound</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="CoPrincipalIRSNo" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/clientmanagement/getstates-84" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="countryId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">countryId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/clientmanagement/getstates</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/alert.02b0fcf354adbc6c0a05.svg-85" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/alert.02b0fcf354adbc6c0a05.svg</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/bondmanagement/v2/0?mode=1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">image/webp,*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/PrincipalManagement/searchprincipal/20-148774800/undefined-86" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/PrincipalManagement/searchprincipal/20-148774800/undefined</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/PrincipalManagement/searchprincipal/20-148774800/undefined-87" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/PrincipalManagement/searchprincipal/20-148774800/undefined</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SaveBond" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">true</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getentrycode/1-92" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="bondTypeId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">bondTypeId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getentrycode/1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">5000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getentrycode/1-91" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="bondTypeId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">bondTypeId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getentrycode/1</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/createbond-93" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/createbond</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,content-type,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">POST</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/createbond-94" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;activityCodeId&quot;:1,&quot;bondAmount&quot;:50000,&quot;clientReferenceNumber&quot;:null,&quot;executionDate&quot;:&quot;07/14/2021&quot;,&quot;fee&quot;:0,&quot;premium&quot;:0,&quot;usCustomsBondNumber&quot;:&quot;&quot;,&quot;effectiveDate&quot;:&quot;07/14/2021&quot;,&quot;isTermReplace&quot;:false,&quot;entryCodeId&quot;:15,&quot;principalDtos&quot;:[{&quot;encryptedPrincipalId&quot;:&quot;nJOAK%2FBRMjC27pXOGG5QoA%3D%3D&quot;,&quot;principalTypeId&quot;:1,&quot;principalNumber&quot;:&quot;26-112555400&quot;,&quot;principalName&quot;:&quot;CITAY APPAREL&quot;,&quot;physicalStreet1&quot;:&quot;38 W. 31ST STREET  UNIT #510&quot;,&quot;physicalStreet2&quot;:&quot;&quot;,&quot;physicalCity&quot;:&quot;NEW YORK&quot;,&quot;physicalPostalCode&quot;:&quot;10001&quot;,&quot;physicalCountry&quot;:&quot;United States of America (US)&quot;,&quot;physicalState&quot;:&quot;New York&quot;,&quot;physicalCountryId&quot;:1,&quot;physicalStateId&quot;:37,&quot;principalNumberTypeId&quot;:1,&quot;principalAddress&quot;:null,&quot;isModified&quot;:true,&quot;manualAddress&quot;:&quot;38 W. 31ST STREET  UNIT #510&quot;,&quot;isPrincipalFromDataBase&quot;:true,&quot;principalActivityCodeId&quot;:1,&quot;divakadbaName&quot;:null,&quot;isGiaOnFile&quot;:false,&quot;isCollateralOnFile&quot;:false},{&quot;encryptedPrincipalId&quot;:&quot;p9qmTCqutWf32CMiZRzssQ%3D%3D&quot;,&quot;principalTypeId&quot;:2,&quot;principalNumber&quot;:&quot;20-148774800&quot;,&quot;principalName&quot;:&quot;INNODYNE SYSTEMS INC &quot;,&quot;physicalStreet1&quot;:&quot;110D W. DUDLEY TOWN ROAD &quot;,&quot;physicalStreet2&quot;:&quot;&quot;,&quot;physicalCity&quot;:&quot;BLOOMFIELD &quot;,&quot;physicalPostalCode&quot;:&quot;6002&quot;,&quot;physicalCountry&quot;:&quot;United States of America (US)&quot;,&quot;physicalState&quot;:&quot;Connecticut&quot;,&quot;physicalCountryId&quot;:1,&quot;physicalStateId&quot;:8,&quot;principalNumberTypeId&quot;:1,&quot;principalAddress&quot;:null,&quot;isModified&quot;:true,&quot;manualAddress&quot;:&quot;110D W. DUDLEY TOWN ROAD &quot;,&quot;isPrincipalFromDataBase&quot;:true,&quot;principalActivityCodeId&quot;:null,&quot;divakadbaName&quot;:null}],&quot;bondId&quot;:0,&quot;isFromDataBase&quot;:true,&quot;createdBy&quot;:1,&quot;signatureId&quot;:1,&quot;encryptedBondRequesterId&quot;:&quot;${encryptedUserID}&quot;,&quot;encryptedClientId&quot;:&quot;${encryptedClientID}&quot;,&quot;bondCategoryId&quot;:1,&quot;primaryPrincipalActivityDto&quot;:{&quot;estimatedDuties&quot;:&quot;&quot;,&quot;estimatedValue&quot;:&quot;&quot;,&quot;yearsDuties&quot;:&quot;&quot;,&quot;yearsValue&quot;:&quot;&quot;},&quot;merchandiseDtos&quot;:[{&quot;merchandise&quot;:&quot;MerchandiseOne&quot;,&quot;countryId&quot;:1,&quot;htsCode&quot;:1233123234,&quot;bondPrincipalMerchandiseId&quot;:0,&quot;bondId&quot;:0}],&quot;scacCode&quot;:&quot;&quot;,&quot;bondPurpose&quot;:&quot;&quot;,&quot;underWritingDtos&quot;:[{&quot;underWritingQuestionId&quot;:1,&quot;underWritingQuestion&quot;:&quot;Will any entries be subject to AD/CVD?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:2,&quot;underWritingQuestion&quot;:&quot;Is the Importer located at a Residential Address?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:3,&quot;underWritingQuestion&quot;:&quot;Is the mailing or physical address a USPS/ Fedex/ UPS location?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:4,&quot;underWritingQuestion&quot;:&quot;Has the importer ever had prior claims/penalties from US Customs?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:6,&quot;underWritingQuestion&quot;:&quot;Is the importer in receipt of a CBP Increase Notice?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1}]}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/createbond</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/createbond-94" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;activityCodeId&quot;:1,&quot;bondAmount&quot;:50000,&quot;clientReferenceNumber&quot;:null,&quot;executionDate&quot;:&quot;07/18/2021&quot;,&quot;fee&quot;:0,&quot;premium&quot;:0,&quot;usCustomsBondNumber&quot;:&quot;&quot;,&quot;effectiveDate&quot;:&quot;07/18/2021&quot;,&quot;isTermReplace&quot;:false,&quot;entryCodeId&quot;:15,&quot;principalDtos&quot;:[{&quot;encryptedPrincipalId&quot;:&quot;${EncryptedPrincipalId}&quot;,&quot;principalTypeId&quot;:1,&quot;principalNumber&quot;:&quot;${PrincipalNumber}&quot;,&quot;principalName&quot;:&quot;${PrincipalName}&quot;,&quot;physicalStreet1&quot;:&quot;${PhysicalStreetOne}&quot;,&quot;physicalStreet2&quot;:&quot;&quot;,&quot;physicalCity&quot;:&quot;${PhysicalCity}&quot;,&quot;physicalPostalCode&quot;:&quot;${PhysicalPostalCode}&quot;,&quot;physicalCountry&quot;:&quot;${PhysicalCountry}&quot;,&quot;physicalState&quot;:&quot;${PhysicalState}&quot;,&quot;physicalCountryId&quot;:${PhysicalCountryId},&quot;physicalStateId&quot;:${PhysicalStateId},&quot;principalNumberTypeId&quot;:${PrincipalNumberTypeId},&quot;principalAddress&quot;:null,&quot;isModified&quot;:true,&quot;manualAddress&quot;:&quot;${ManualAddress}&quot;,&quot;isPrincipalFromDataBase&quot;:true,&quot;principalActivityCodeId&quot;:1,&quot;divakadbaName&quot;:${DivakadbaName},&quot;isGiaOnFile&quot;:${GiaOnFile},&quot;isCollateralOnFile&quot;:${CollateralOnFile}},{&quot;encryptedPrincipalId&quot;:&quot;p9qmTCqutWf32CMiZRzssQ%3D%3D&quot;,&quot;principalTypeId&quot;:2,&quot;principalNumber&quot;:&quot;20-148774800&quot;,&quot;principalName&quot;:&quot;INNODYNE SYSTEMS INC &quot;,&quot;physicalStreet1&quot;:&quot;${PhysicalStreetOne}&quot;,&quot;physicalStreet2&quot;:&quot;&quot;,&quot;physicalCity&quot;:&quot;BLOOMFIELD &quot;,&quot;physicalPostalCode&quot;:&quot;6002&quot;,&quot;physicalCountry&quot;:&quot;United States of America (US)&quot;,&quot;physicalState&quot;:&quot;Connecticut&quot;,&quot;physicalCountryId&quot;:1,&quot;physicalStateId&quot;:8,&quot;principalNumberTypeId&quot;:1,&quot;principalAddress&quot;:null,&quot;isModified&quot;:true,&quot;manualAddress&quot;:&quot;110D W. DUDLEY TOWN ROAD &quot;,&quot;isPrincipalFromDataBase&quot;:true,&quot;principalActivityCodeId&quot;:null,&quot;divakadbaName&quot;:null}],&quot;bondId&quot;:0,&quot;isFromDataBase&quot;:true,&quot;createdBy&quot;:1,&quot;signatureId&quot;:1,&quot;encryptedBondRequesterId&quot;:&quot;${encryptedUserID}&quot;,&quot;encryptedClientId&quot;:&quot;${encryptedClientID}&quot;,&quot;bondCategoryId&quot;:1,&quot;primaryPrincipalActivityDto&quot;:{&quot;estimatedDuties&quot;:&quot;&quot;,&quot;estimatedValue&quot;:&quot;&quot;,&quot;yearsDuties&quot;:&quot;&quot;,&quot;yearsValue&quot;:&quot;&quot;},&quot;merchandiseDtos&quot;:[{&quot;merchandise&quot;:&quot;MerchandiseOne&quot;,&quot;countryId&quot;:1,&quot;htsCode&quot;:1233123234,&quot;bondPrincipalMerchandiseId&quot;:0,&quot;bondId&quot;:0}],&quot;scacCode&quot;:&quot;&quot;,&quot;bondPurpose&quot;:&quot;&quot;,&quot;underWritingDtos&quot;:[{&quot;underWritingQuestionId&quot;:1,&quot;underWritingQuestion&quot;:&quot;Will any entries be subject to AD/CVD?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:2,&quot;underWritingQuestion&quot;:&quot;Is the Importer located at a Residential Address?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:3,&quot;underWritingQuestion&quot;:&quot;Is the mailing or physical address a USPS/ Fedex/ UPS location?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:4,&quot;underWritingQuestion&quot;:&quot;Has the importer ever had prior claims/penalties from US Customs?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:6,&quot;underWritingQuestion&quot;:&quot;Is the importer in receipt of a CBP Increase Notice?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1}]}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/createbond</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor - EncryptedBondId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">EncryptedBondId</stringProp>
                  <stringProp name="RegexExtractor.regex">encryptedBondId&quot;:&quot;(.+?)%3D%3D&quot;,&quot;encryptedClientId&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">EncryptedBondId Not Found</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/createbond-94" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;activityCodeId&quot;:1,&quot;bondAmount&quot;:50000,&quot;clientReferenceNumber&quot;:null,&quot;executionDate&quot;:&quot;07/11/2021&quot;,&quot;fee&quot;:0,&quot;premium&quot;:0,&quot;usCustomsBondNumber&quot;:&quot;&quot;,&quot;effectiveDate&quot;:&quot;07/11/2021&quot;,&quot;isTermReplace&quot;:false,&quot;entryCodeId&quot;:15,&quot;principalDtos&quot;:[{&quot;encryptedPrincipalId&quot;:&quot;nJOAK%2FBRMjC27pXOGG5QoA%3D%3D&quot;,&quot;principalTypeId&quot;:1,&quot;principalNumber&quot;:&quot;26-112555400&quot;,&quot;principalName&quot;:&quot;CITAY APPAREL&quot;,&quot;physicalStreet1&quot;:&quot;38 W. 31ST STREET  UNIT #510&quot;,&quot;physicalStreet2&quot;:&quot;&quot;,&quot;physicalCity&quot;:&quot;NEW YORK&quot;,&quot;physicalPostalCode&quot;:&quot;10001&quot;,&quot;physicalCountry&quot;:&quot;United States of America (US)&quot;,&quot;physicalState&quot;:&quot;New York&quot;,&quot;physicalCountryId&quot;:1,&quot;physicalStateId&quot;:37,&quot;principalNumberTypeId&quot;:1,&quot;principalAddress&quot;:null,&quot;isModified&quot;:true,&quot;manualAddress&quot;:&quot;38 W. 31ST STREET  UNIT #510&quot;,&quot;isPrincipalFromDataBase&quot;:true,&quot;principalActivityCodeId&quot;:1,&quot;divakadbaName&quot;:null,&quot;isGiaOnFile&quot;:false,&quot;isCollateralOnFile&quot;:false},{&quot;encryptedPrincipalId&quot;:&quot;${EncryptedPrincipalId}&quot;,&quot;principalTypeId&quot;:${PrincipalTypeID},&quot;principalNumber&quot;:&quot;${PrincipalNumber}&quot;,&quot;principalName&quot;:&quot;${PrincipalName}&quot;,&quot;physicalStreet1&quot;:&quot;${PhysicalStreetOne}&quot;,&quot;physicalStreet2&quot;:&quot;${PhysicalStreetTwo}&quot;,&quot;physicalCity&quot;:&quot;${PhysicalCity}&quot;,&quot;physicalPostalCode&quot;:&quot;${PhysicalPostalCode}&quot;,&quot;physicalCountry&quot;:&quot;${PhysicalCountry}&quot;,&quot;physicalState&quot;:&quot;${PhysicalState}&quot;,&quot;physicalCountryId&quot;:${PhysicalCountryId},&quot;physicalStateId&quot;:${PhysicalStateId},&quot;principalNumberTypeId&quot;:${PrincipalNumberTypeId},&quot;principalAddress&quot;:null,&quot;isModified&quot;:true,&quot;manualAddress&quot;:&quot;${ManualAddress}&quot;,&quot;isPrincipalFromDataBase&quot;:true,&quot;principalActivityCodeId&quot;:null,&quot;divakadbaName&quot;:${DivakadbaName}}],&quot;bondId&quot;:0,&quot;isFromDataBase&quot;:true,&quot;createdBy&quot;:1,&quot;signatureId&quot;:1,&quot;encryptedBondRequesterId&quot;:&quot;${encryptedUserID}&quot;,&quot;encryptedClientId&quot;:&quot;${encryptedClientID}&quot;,&quot;bondCategoryId&quot;:1,&quot;primaryPrincipalActivityDto&quot;:{&quot;estimatedDuties&quot;:&quot;&quot;,&quot;estimatedValue&quot;:&quot;&quot;,&quot;yearsDuties&quot;:&quot;&quot;,&quot;yearsValue&quot;:&quot;&quot;},&quot;merchandiseDtos&quot;:[{&quot;merchandise&quot;:&quot;MerchandiseOne&quot;,&quot;countryId&quot;:1,&quot;htsCode&quot;:1233123234,&quot;bondPrincipalMerchandiseId&quot;:0,&quot;bondId&quot;:0}],&quot;scacCode&quot;:&quot;&quot;,&quot;bondPurpose&quot;:&quot;&quot;,&quot;underWritingDtos&quot;:[{&quot;underWritingQuestionId&quot;:1,&quot;underWritingQuestion&quot;:&quot;Will any entries be subject to AD/CVD?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:2,&quot;underWritingQuestion&quot;:&quot;Is the Importer located at a Residential Address?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:3,&quot;underWritingQuestion&quot;:&quot;Is the mailing or physical address a USPS/ Fedex/ UPS location?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:4,&quot;underWritingQuestion&quot;:&quot;Has the importer ever had prior claims/penalties from US Customs?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1},{&quot;underWritingQuestionId&quot;:6,&quot;underWritingQuestion&quot;:&quot;Is the importer in receipt of a CBP Increase Notice?&quot;,&quot;underWritingAnswer&quot;:false,&quot;createdBy&quot;:1}]}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/createbond</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getbond?bondId=ICT9D7PODkxzBYEDlaq1VA%3D%3D-95" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getbond?bondId=${EncryptedBondId}%3D%3D</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getbond-96" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="bondId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">bondId</stringProp>
                      <stringProp name="Argument.value">${EncryptedBondId}==</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getbond</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondAction/getbonddocuments?BondID=ICT9D7PODkxzBYEDlaq1VA%3D%3D-97" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondAction/getbonddocuments?BondID=${EncryptedBondId}%3D%3D</stringProp>
                <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Headers" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                      <stringProp name="Header.value">authorization,cache-control,pragma</stringProp>
                    </elementProp>
                    <elementProp name="Access-Control-Request-Method" elementType="Header">
                      <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                      <stringProp name="Header.value">GET</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/Alert/get-alert-98" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/Alert/get-alert</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondManagement/getactivitycode-99" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="bondTypeId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">bondTypeId</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondManagement/getactivitycode</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/assets/images/moreaction.svg-100" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/assets/images/moreaction.svg</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/bondmanagement/v2/${EncryptedBondId}%253D%253D?mode=2&amp;bondType=1&amp;bondStatus=In%20Progress</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">image/webp,*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/api/BondAction/getbonddocuments-101" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="BondID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">BondID</stringProp>
                      <stringProp name="Argument.value">${EncryptedBondId}==</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">api.stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/api/BondAction/getbonddocuments</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${AccessToken}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache, no-store, must-revalidate</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/assets/images/download.svg-102" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/assets/images/download.svg</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/bondmanagement/v2/${EncryptedBondId}%253D%253D?mode=2&amp;bondType=1&amp;bondStatus=In%20Progress</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">image/webp,*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/assets/images/email.svg-103" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/assets/images/email.svg</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/bondmanagement/v2/${EncryptedBondId}%253D%253D?mode=2&amp;bondType=1&amp;bondStatus=In%20Progress</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">image/webp,*/*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Logout" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/logout-104" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">b2c_1a_susifpr</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="id_token_hint" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">id_token_hint</stringProp>
                    <stringProp name="Argument.value">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Im1VMGtrUnNYUGUwOGdRYTRKbl94MEhYR0F1UTc2SGZZbmVPdTVnOUtnZ1UifQ.eyJleHAiOjE2MjU4MzQzNDgsIm5iZiI6MTYyNTgzMDc0OCwidmVyIjoiMS4wIiwiaXNzIjoiaHR0cHM6Ly9lcGljbm9ucHJvZGIyYy5iMmNsb2dpbi5jb20vYjdmYjEyMDctODViYS00ZjE2LWEyMzktNDViZTM5OWVmOTI0L3YyLjAvIiwic3ViIjoiZGRjYjE5M2UtYWI5YS00MzY1LTk5MTctOTI0YTc3NzU0OGZkIiwiYXVkIjoiYjhmNTg5ZjktM2JlZC00OTBkLWFlMjUtOGFkYzk1YjY5MTRhIiwibm9uY2UiOiJSemx6UXpnd2JrVk1RV2x0VlMxeVptSldkRkpuUVZCUmRIbGxibXRXV25WaFQxWnlXRFYzWDAxalN6QjUiLCJpYXQiOjE2MjU4MzA3NDgsImF1dGhfdGltZSI6MTYyNTgzMDc0OCwib2lkIjoiZGRjYjE5M2UtYWI5YS00MzY1LTk5MTctOTI0YTc3NzU0OGZkIiwiZXh0ZW5zaW9uX211c3RSZXNldFBhc3N3b3JkIjpmYWxzZSwiZW1haWwiOiJwZXJmdXNlcjAyQHlvcG1haWwuY29tIiwibmFtZSI6InBlcmZ1c2VyMDIiLCJnaXZlbl9uYW1lIjoiUGVyZlVzZXJUd29GTiIsInRpZCI6ImI3ZmIxMjA3LTg1YmEtNGYxNi1hMjM5LTQ1YmUzOTllZjkyNCIsInRmcCI6IkIyQ18xQV9TVVNJRlBSIiwiYXRfaGFzaCI6IkNLMnY1YzMxTGdXdjk1MU1lYUFBOUEifQ.kEajCMy9bYH_oSbA0iT9Itb_fRwun2mbkWiQfWHi8F-zCLdfXOX1T1UN8RkwVdQ_wqYrCEXoN3S23BANTBmgu4ydXRKTkEImu8NnXu2IrtNi3evPKDFAbyM8HC8us4nHfaHuNmGWgofHzzvTeV-dA2x1rsqDoSr4-E3pBnW313e0ZtsA26oftM2njDKtrrZTp8Bvnew5G6dHb28QnN_vQOb-aPy5JyP2Rsb0aM0ZUIr-7vonmtTyhc3a6epPAfMcd1CxfYVK1PCx60HkTWFNaH1cBQXVo6wjwJfTEMu9875IMoCfsyloSE93Q40KObmsajJg4Zk4Em37oQN0XY129w</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/BondManagement/getentrycode/1-106" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="bondTypeId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">bondTypeId</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">stagingbis.epicbrokers.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/BondManagement/getentrycode/1</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/bondmanagement/v2/${EncryptedBondId}%253D%253D?mode=2&amp;bondType=1&amp;bondStatus=In%20Progress</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/logout-105" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">b2c_1a_susifpr</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="post_logout_redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">post_logout_redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/logout</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/v2.0/.well-known/openid-configuration-108" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">B2C_1A_SUSIFPR</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/v2.0/.well-known/openid-configuration</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/discovery/v2.0/keys-109" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">b2c_1a_susifpr</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/discovery/v2.0/keys</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize-110" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="p" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">p</stringProp>
                    <stringProp name="Argument.value">b2c_1a_susifpr</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="response_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">response_type</stringProp>
                    <stringProp name="Argument.value">token id_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">b8f589f9-3bed-490d-ae25-8adc95b6914a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="state" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">state</stringProp>
                    <stringProp name="Argument.value">M2dsX3RjRVBXMXpMYS1SbjZWbVRleV9CWS1SaXY3ekZ2RWIxc2VmclVDNUt-</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://stagingbis.epicbrokers.com</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">openid profile ${scheme}://epicnonprodb2c.onmicrosoft.com/api/user_impersonation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="nonce" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">nonce</stringProp>
                    <stringProp name="Argument.value">M2dsX3RjRVBXMXpMYS1SbjZWbVRleV9CWS1SaXY3ekZ2RWIxc2VmclVDNUt-</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://stagingbis.epicbrokers.com/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/epicnonprodb2c.onmicrosoft.com/B2C_1A_SUSIFPR/client/perftrace?tx=StateProperties=eyJUSUQiOiJjZTc2NWEzOS04ZTg1LTRiZTgtYjVmMS0yZmI2Y2NlYzdlMDEifQ&amp;p=B2C_1A_SUSIFPR-111" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;navigation&quot;:{&quot;type&quot;:0,&quot;redirectCount&quot;:0},&quot;timing&quot;:{&quot;navigationStart&quot;:1625831123972,&quot;unloadEventStart&quot;:0,&quot;unloadEventEnd&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1625831123972,&quot;domainLookupStart&quot;:1625831124006,&quot;domainLookupEnd&quot;:1625831124006,&quot;connectStart&quot;:1625831124007,&quot;connectEnd&quot;:1625831124008,&quot;secureConnectionStart&quot;:1625831124007,&quot;requestStart&quot;:1625831124010,&quot;responseStart&quot;:1625831124020,&quot;responseEnd&quot;:1625831124930,&quot;domLoading&quot;:1625831124957,&quot;domInteractive&quot;:1625831125104,&quot;domContentLoadedEventStart&quot;:1625831125110,&quot;domContentLoadedEventEnd&quot;:1625831125113,&quot;domComplete&quot;:1625831125113,&quot;loadEventStart&quot;:1625831125113,&quot;loadEventEnd&quot;:1625831125120},&quot;entries&quot;:[{&quot;name&quot;:&quot;${scheme}://epicnonprodb2c.b2clogin.com/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize?p=b2c_1a_susifpr&amp;response_type=token%20id_token&amp;client_id=b8f589f9-3bed-490d-ae25-8adc95b6914a&amp;state=M2dsX3RjRVBXMXpMYS1SbjZWbVRleV9CWS1SaXY3ekZ2RWIxc2VmclVDNUt-&amp;redirect_uri=${scheme}%3A%2F%2Fstagingbis.epicbrokers.com&amp;scope=openid%20profile%20https%3A%2F%2Fepicnonprodb2c.onmicrosoft.com%2Fapi%2Fuser_impersonation&amp;nonce=M2dsX3RjRVBXMXpMYS1SbjZWbVRleV9CWS1SaXY3ekZ2RWIxc2VmclVDNUt-&quot;,&quot;entryType&quot;:&quot;navigation&quot;,&quot;startTime&quot;:0,&quot;duration&quot;:1149,&quot;initiatorType&quot;:&quot;navigation&quot;,&quot;nextHopProtocol&quot;:&quot;http/1.1&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:0,&quot;domainLookupStart&quot;:34,&quot;domainLookupEnd&quot;:34,&quot;connectStart&quot;:35,&quot;connectEnd&quot;:37,&quot;secureConnectionStart&quot;:35,&quot;requestStart&quot;:37,&quot;responseStart&quot;:47,&quot;responseEnd&quot;:959,&quot;transferSize&quot;:441226,&quot;encodedBodySize&quot;:438981,&quot;decodedBodySize&quot;:438981,&quot;serverTiming&quot;:[],&quot;unloadEventStart&quot;:0,&quot;unloadEventEnd&quot;:0,&quot;domInteractive&quot;:1132,&quot;domContentLoadedEventStart&quot;:1138,&quot;domContentLoadedEventEnd&quot;:1142,&quot;domComplete&quot;:1142,&quot;loadEventStart&quot;:1142,&quot;loadEventEnd&quot;:1149,&quot;type&quot;:&quot;navigate&quot;,&quot;redirectCount&quot;:0},{&quot;name&quot;:&quot;${scheme}://blobstoragebisdevqa.blob.core.windows.net/bislogin/login.html&quot;,&quot;entryType&quot;:&quot;resource&quot;,&quot;startTime&quot;:1100,&quot;duration&quot;:18,&quot;initiatorType&quot;:&quot;xmlhttprequest&quot;,&quot;nextHopProtocol&quot;:&quot;http/1.1&quot;,&quot;workerStart&quot;:0,&quot;redirectStart&quot;:0,&quot;redirectEnd&quot;:0,&quot;fetchStart&quot;:1100,&quot;domainLookupStart&quot;:0,&quot;domainLookupEnd&quot;:0,&quot;connectStart&quot;:0,&quot;connectEnd&quot;:0,&quot;secureConnectionStart&quot;:0,&quot;requestStart&quot;:0,&quot;responseStart&quot;:0,&quot;responseEnd&quot;:1118,&quot;transferSize&quot;:0,&quot;encodedBodySize&quot;:0,&quot;decodedBodySize&quot;:0,&quot;serverTiming&quot;:[]},{&quot;name&quot;:&quot;first-contentful-paint&quot;,&quot;entryType&quot;:&quot;paint&quot;,&quot;startTime&quot;:1223,&quot;duration&quot;:0}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">epicnonprodb2c.b2clogin.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/epicnonprodb2c.onmicrosoft.com/B2C_1A_SUSIFPR/client/perftrace?tx=StateProperties=eyJUSUQiOiJjZTc2NWEzOS04ZTg1LTRiZTgtYjVmMS0yZmI2Y2NlYzdlMDEifQ&amp;p=B2C_1A_SUSIFPR</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com/epicnonprodb2c.onmicrosoft.com/oauth2/v2.0/authorize?p=b2c_1a_susifpr&amp;response_type=token%20id_token&amp;client_id=b8f589f9-3bed-490d-ae25-8adc95b6914a&amp;state=M2dsX3RjRVBXMXpMYS1SbjZWbVRleV9CWS1SaXY3ekZ2RWIxc2VmclVDNUt-&amp;redirect_uri=${scheme}%3A%2F%2Fstagingbis.epicbrokers.com&amp;scope=openid%20profile%20https%3A%2F%2Fepicnonprodb2c.onmicrosoft.com%2Fapi%2Fuser_impersonation&amp;nonce=M2dsX3RjRVBXMXpMYS1SbjZWbVRleV9CWS1SaXY3ekZ2RWIxc2VmclVDNUt-</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://epicnonprodb2c.b2clogin.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="X-CSRF-TOKEN" elementType="Header">
                    <stringProp name="Header.name">X-CSRF-TOKEN</stringProp>
                    <stringProp name="Header.value">aU9LWStRTWVNTG12TWtBWEYyckRneTlPdVdGVzZBK0RnbWo5V01kdlhJOU5ITGd0ZXNad1VhMkFDTVFtbmt0S1V0MXI3WmxsaUVERzc4bGhKZHlPR1E9PTsyMDIxLTA3LTA5VDExOjQ1OjI0LjQyNzgzNjhaO05JVDQxVDZGaW1aZEFha1ZIRkhJZEE9PTt7Ik9yY2hlc3RyYXRpb25TdGVwIjoxfQ==</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-2063843150">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2)</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
